PROSJEKTSTRUKTUR OG KODEINNHOLD
Generert: 22.03.2025 kl. 12:40:33
================================================================================

MAPPESTRUKTUR OG KODEINNHOLD FOR: C:\bconnect\se\b2b-sosial\src
================================================================================

📁 src/
│   📁 app/
│   📁 components/
│   │   📄 ImageUpload.tsx
│   │   ├── FILINNHOLD (53 linjer):
│   │   │      1 │ // src/components/ImageUpload.tsx
│   │   │      2 │ import { useState, ChangeEvent } from "react";
│   │   │      3 │ import { ref, uploadBytes, getDownloadURL } from "firebase/storage";
│   │   │      4 │ import { storage } from "@/lib/firebase";
│   │   │      5 │ 
│   │   │      6 │ interface ImageUploadProps {
│   │   │      7 │   label: string;
│   │   │      8 │   onUpload: (url: string) => void;
│   │   │      9 │   recommendedSize: string;
│   │   │     10 │   maxSizeMB: number;
│   │   │     11 │   defaultImage?: string;
│   │   │     12 │ }
│   │   │     13 │ 
│   │   │     14 │ export default function ImageUpload({ label, onUpload, recommendedSize, maxSizeMB, defaultImage }: ImageUploadProps) {
│   │   │     15 │   const [error, setError] = useState<string | null>(null);
│   │   │     16 │   const [preview, setPreview] = useState<string | null>(defaultImage || null);
│   │   │     17 │ 
│   │   │     18 │   const handleFileChange = async (e: ChangeEvent<HTMLInputElement>) => {
│   │   │     19 │     const file = e.target.files?.[0];
│   │   │     20 │     if (!file) return;
│   │   │     21 │ 
│   │   │     22 │     // Sjekk filstørrelse
│   │   │     23 │     const maxSizeBytes = maxSizeMB * 1024 * 1024; // Konverter MB til bytes
│   │   │     24 │     if (file.size > maxSizeBytes) {
│   │   │     25 │       setError(`Filen er for stor. Maksimal størrelse er ${maxSizeMB}MB.`);
│   │   │     26 │       return;
│   │   │     27 │     }
│   │   │     28 │ 
│   │   │     29 │     try {
│   │   │     30 │       // Last opp til Firebase Storage
│   │   │     31 │       const storageRef = ref(storage, `images/${Date.now()}_${file.name}`);
│   │   │     32 │       const snapshot = await uploadBytes(storageRef, file);
│   │   │     33 │       const downloadURL = await getDownloadURL(snapshot.ref);
│   │   │     34 │ 
│   │   │     35 │       // Oppdater forhåndsvisning og send URL til forelder
│   │   │     36 │       setPreview(downloadURL);
│   │   │     37 │       onUpload(downloadURL);
│   │   │     38 │       setError(null);
│   │   │     39 │     } catch (err: any) {
│   │   │     40 │       setError("Kunne ikke laste opp bildet: " + err.message);
│   │   │     41 │     }
│   │   │     42 │   };
│   │   │     43 │ 
│   │   │     44 │   return (
│   │   │     45 │     <div className="mb-4">
│   │   │     46 │       <label className="block text-sm font-medium text-black mb-2">{label}</label>
│   │   │     47 │       <p className="text-sm text-gray-600 mb-2">Anbefalt størrelse: {recommendedSize}, maks {maxSizeMB}MB</p>
│   │   │     48 │       {preview && <img src={preview} alt="Forhåndsvisning" className="w-32 h-32 object-cover mb-2 rounded" />}
│   │   │     49 │       <input type="file" accept="image/*" onChange={handleFileChange} className="text-black" />
│   │   │     50 │       {error && <p className="text-red-500 text-sm mt-1">{error}</p>}
│   │   │     51 │     </div>
│   │   │     52 │   );
│   │   │     53 │ }
│   │   └── SLUTT PÅ FIL

│   │   📄 ProfileView.tsx
│   │   ├── FILINNHOLD (115 linjer):
│   │   │      1 │ // src/components/ProfileView.tsx
│   │   │      2 │ import Link from "next/link";
│   │   │      3 │ import { Business, User } from "@/lib/types";
│   │   │      4 │ 
│   │   │      5 │ interface ProfileViewProps {
│   │   │      6 │   profile: Business | User;
│   │   │      7 │   type: "business" | "user";
│   │   │      8 │ }
│   │   │      9 │ 
│   │   │     10 │ export default function ProfileView({ profile, type }: ProfileViewProps) {
│   │   │     11 │   const isBusiness = type === "business";
│   │   │     12 │   const businessProfile = isBusiness ? (profile as Business) : null;
│   │   │     13 │   const userProfile = !isBusiness ? (profile as User) : null;
│   │   │     14 │ 
│   │   │     15 │   return (
│   │   │     16 │     <div className="bg-gray-50 min-h-screen">
│   │   │     17 │       <nav className="bg-blue-600 p-4 flex justify-between items-center">
│   │   │     18 │         <Link href="/" className="flex items-center text-white font-bold text-xl hover:text-blue-100">
│   │   │     19 │           <img src="/logo.svg" alt="B2B Logo" className="w-8 h-8 mr-2" />
│   │   │     20 │           B2B Social
│   │   │     21 │         </Link>
│   │   │     22 │       </nav>
│   │   │     23 │ 
│   │   │     24 │       <div className="relative">
│   │   │     25 │         {/* Bakgrunnsbilde */}
│   │   │     26 │         {profile.backgroundImage ? (
│   │   │     27 │           <img
│   │   │     28 │             src={profile.backgroundImage}
│   │   │     29 │             alt="Bakgrunnsbilde"
│   │   │     30 │             className="w-full h-64 object-cover"
│   │   │     31 │           />
│   │   │     32 │         ) : (
│   │   │     33 │           <div className="w-full h-64 bg-gray-300" />
│   │   │     34 │         )}
│   │   │     35 │ 
│   │   │     36 │         {/* Profilbilde */}
│   │   │     37 │         <div className="absolute top-48 left-10">
│   │   │     38 │           {profile.profileImage ? (
│   │   │     39 │             <img
│   │   │     40 │               src={profile.profileImage}
│   │   │     41 │               alt="Profilbilde"
│   │   │     42 │               className="w-32 h-32 rounded-full border-4 border-white object-cover"
│   │   │     43 │             />
│   │   │     44 │           ) : (
│   │   │     45 │             <div className="w-32 h-32 rounded-full bg-gray-400 border-4 border-white flex items-center justify-center">
│   │   │     46 │               <span className="text-white text-2xl">
│   │   │     47 │                 {isBusiness ? businessProfile?.name[0] : userProfile?.firstName[0]}
│   │   │     48 │               </span>
│   │   │     49 │             </div>
│   │   │     50 │           )}
│   │   │     51 │         </div>
│   │   │     52 │       </div>
│   │   │     53 │ 
│   │   │     54 │       <div className="max-w-4xl mx-auto mt-20 bg-white rounded-lg shadow-md p-8">
│   │   │     55 │         <h1 className="text-3xl font-bold mb-6 text-black">
│   │   │     56 │           {isBusiness ? businessProfile?.name : `${userProfile?.firstName} ${userProfile?.lastName}`}
│   │   │     57 │         </h1>
│   │   │     58 │ 
│   │   │     59 │         {isBusiness && (
│   │   │     60 │           <div className="mb-6">
│   │   │     61 │             <h2 className="text-xl font-semibold text-blue-600 mb-2">Bedriftsinformasjon</h2>
│   │   │     62 │             <p><strong>Organisasjonsnummer:</strong> {businessProfile?.orgNumber}</p>
│   │   │     63 │             <p><strong>Selskapsform:</strong> {businessProfile?.companyType}</p>
│   │   │     64 │             <p><strong>Kategori:</strong> {businessProfile?.category}</p>
│   │   │     65 │             <p><strong>Beskrivelse:</strong> {businessProfile?.description}</p>
│   │   │     66 │             <p><strong>Tagger:</strong> {businessProfile?.tags.join(", ")}</p>
│   │   │     67 │           </div>
│   │   │     68 │         )}
│   │   │     69 │ 
│   │   │     70 │         <div className="mb-6">
│   │   │     71 │           <h2 className="text-xl font-semibold text-blue-600 mb-2">{isBusiness ? "Kontaktinformasjon" : "Personlig informasjon"}</h2>
│   │   │     72 │           <p><strong>E-post:</strong> {isBusiness ? businessProfile?.businessEmail : userProfile?.email}</p>
│   │   │     73 │           <p><strong>Telefon:</strong> {isBusiness ? businessProfile?.businessPhone : userProfile?.phone || "Ikke oppgitt"}</p>
│   │   │     74 │           {isBusiness && businessProfile?.website && (
│   │   │     75 │             <p><strong>Nettside:</strong> <a href={businessProfile.website} className="text-blue-600 hover:underline">{businessProfile.website}</a></p>
│   │   │     76 │           )}
│   │   │     77 │           {isBusiness && (
│   │   │     78 │             <p><strong>Adresse:</strong> {businessProfile?.address}, {businessProfile?.postalCode} {businessProfile?.city}</p>
│   │   │     79 │           )}
│   │   │     80 │           {!isBusiness && userProfile?.profession && <p><strong>Yrke:</strong> {userProfile.profession}</p>}
│   │   │     81 │           {!isBusiness && userProfile?.industry && <p><strong>Bransje:</strong> {userProfile.industry}</p>}
│   │   │     82 │           {!isBusiness && <p><strong>Nyhetsbrev:</strong> {userProfile?.newsletter ? "Ja" : "Nei"}</p>}
│   │   │     83 │         </div>
│   │   │     84 │ 
│   │   │     85 │         {isBusiness && (
│   │   │     86 │           <div className="mb-6">
│   │   │     87 │             <h2 className="text-xl font-semibold text-blue-600 mb-2">Kontaktperson</h2>
│   │   │     88 │             <p><strong>Navn:</strong> {businessProfile?.contact.firstName} {businessProfile?.contact.lastName}</p>
│   │   │     89 │             <p><strong>E-post:</strong> {businessProfile?.contact.email}</p>
│   │   │     90 │             {businessProfile?.contact.phone && <p><strong>Telefon:</strong> {businessProfile?.contact.phone}</p>}
│   │   │     91 │             <p><strong>Stilling:</strong> {businessProfile?.contact.position}</p>
│   │   │     92 │           </div>
│   │   │     93 │         )}
│   │   │     94 │ 
│   │   │     95 │         {isBusiness && businessProfile?.galleryImages && businessProfile.galleryImages.length > 0 && (
│   │   │     96 │           <div className="mb-6">
│   │   │     97 │             <h2 className="text-xl font-semibold text-blue-600 mb-2">Bildegalleri</h2>
│   │   │     98 │             <div className="grid grid-cols-3 gap-4">
│   │   │     99 │               {businessProfile.galleryImages.map((image, index) => (
│   │   │    100 │                 <img key={index} src={image} alt={`Galleri bilde ${index + 1}`} className="w-full h-40 object-cover rounded" />
│   │   │    101 │               ))}
│   │   │    102 │             </div>
│   │   │    103 │           </div>
│   │   │    104 │         )}
│   │   │    105 │ 
│   │   │    106 │         <Link
│   │   │    107 │           href={isBusiness ? "/edit-profile/business" : "/edit-profile/user"}
│   │   │    108 │           className="inline-block bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700"
│   │   │    109 │         >
│   │   │    110 │           Rediger profil
│   │   │    111 │         </Link>
│   │   │    112 │       </div>
│   │   │    113 │     </div>
│   │   │    114 │   );
│   │   │    115 │ }
│   │   └── SLUTT PÅ FIL

│   │   📁 business/
│   │   │   📄 BusinessCard.tsx
│   │   │   ├── FILINNHOLD (30 linjer):
│   │   │   │      1 │ interface BusinessCardProps {
│   │   │   │      2 │   name: string;
│   │   │   │      3 │   tags: string[];
│   │   │   │      4 │   description: string;
│   │   │   │      5 │ }
│   │   │   │      6 │ 
│   │   │   │      7 │ export default function BusinessCard({ name, tags, description }: BusinessCardProps) {
│   │   │   │      8 │   return (
│   │   │   │      9 │     <div className="bg-white rounded-lg shadow-md overflow-hidden">
│   │   │   │     10 │       <div className="p-4">
│   │   │   │     11 │         <div className="flex items-center mb-3">
│   │   │   │     12 │           <div className="w-12 h-12 bg-gray-300 rounded-full flex items-center justify-center text-gray-800">
│   │   │   │     13 │             <span className="font-bold">{name[0]}</span>
│   │   │   │     14 │           </div>
│   │   │   │     15 │           <div className="ml-3">
│   │   │   │     16 │             <h3 className="font-bold">{name}</h3>
│   │   │   │     17 │             <div className="flex flex-wrap">
│   │   │   │     18 │               {tags.map((tag: string) => (
│   │   │   │     19 │                 <span key={tag} className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded mr-1 mb-1">
│   │   │   │     20 │                   {tag}
│   │   │   │     21 │                 </span>
│   │   │   │     22 │               ))}
│   │   │   │     23 │             </div>
│   │   │   │     24 │           </div>
│   │   │   │     25 │         </div>
│   │   │   │     26 │         <p className="text-sm text-gray-600 mb-3">{description}</p>
│   │   │   │     27 │       </div>
│   │   │   │     28 │     </div>
│   │   │   │     29 │   );
│   │   │   │     30 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 BusinessCategories.tsx
│   │   │   ├── FILINNHOLD (119 linjer):
│   │   │   │      1 │ import Link from "next/link";
│   │   │   │      2 │ import { motion } from "framer-motion";
│   │   │   │      3 │ 
│   │   │   │      4 │ export default function BusinessCategories() {
│   │   │   │      5 │   return (
│   │   │   │      6 │     <div className="mb-12">
│   │   │   │      7 │       <h2 className="text-2xl font-bold mb-6">Business Categories</h2>
│   │   │   │      8 │       <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
│   │   │   │      9 │         {/* Technology */}
│   │   │   │     10 │         <Link href="/categories/technology">
│   │   │   │     11 │           <motion.div
│   │   │   │     12 │             className="category-card bg-white p-6 rounded-lg shadow-lg text-center"
│   │   │   │     13 │             whileHover={{ scale: 1.05 }}
│   │   │   │     14 │             transition={{ duration: 0.3 }}
│   │   │   │     15 │           >
│   │   │   │     16 │             <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3">
│   │   │   │     17 │               <svg
│   │   │   │     18 │                 xmlns="http://www.w3.org/2000/svg"
│   │   │   │     19 │                 className="h-6 w-6 text-blue-600"
│   │   │   │     20 │                 fill="none"
│   │   │   │     21 │                 viewBox="0 0 24 24"
│   │   │   │     22 │                 stroke="currentColor"
│   │   │   │     23 │               >
│   │   │   │     24 │                 <path
│   │   │   │     25 │                   strokeLinecap="round"
│   │   │   │     26 │                   strokeLinejoin="round"
│   │   │   │     27 │                   strokeWidth="2"
│   │   │   │     28 │                   d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
│   │   │   │     29 │                 />
│   │   │   │     30 │               </svg>
│   │   │   │     31 │             </div>
│   │   │   │     32 │             <h3 className="font-medium text-gray-800">Technology</h3>
│   │   │   │     33 │           </motion.div>
│   │   │   │     34 │         </Link>
│   │   │   │     35 │ 
│   │   │   │     36 │         {/* Finance */}
│   │   │   │     37 │         <Link href="/categories/finance">
│   │   │   │     38 │           <motion.div
│   │   │   │     39 │             className="category-card bg-white p-6 rounded-lg shadow-lg text-center"
│   │   │   │     40 │             whileHover={{ scale: 1.05 }}
│   │   │   │     41 │             transition={{ duration: 0.3 }}
│   │   │   │     42 │           >
│   │   │   │     43 │             <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3">
│   │   │   │     44 │               <svg
│   │   │   │     45 │                 xmlns="http://www.w3.org/2000/svg"
│   │   │   │     46 │                 className="h-6 w-6 text-green-600"
│   │   │   │     47 │                 fill="none"
│   │   │   │     48 │                 viewBox="0 0 24 24"
│   │   │   │     49 │                 stroke="currentColor"
│   │   │   │     50 │               >
│   │   │   │     51 │                 <path
│   │   │   │     52 │                   strokeLinecap="round"
│   │   │   │     53 │                   strokeLinejoin="round"
│   │   │   │     54 │                   strokeWidth="2"
│   │   │   │     55 │                   d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
│   │   │   │     56 │                 />
│   │   │   │     57 │               </svg>
│   │   │   │     58 │             </div>
│   │   │   │     59 │             <h3 className="font-medium text-gray-800">Finance</h3>
│   │   │   │     60 │           </motion.div>
│   │   │   │     61 │         </Link>
│   │   │   │     62 │ 
│   │   │   │     63 │         {/* Marketing */}
│   │   │   │     64 │         <Link href="/categories/marketing">
│   │   │   │     65 │           <motion.div
│   │   │   │     66 │             className="category-card bg-white p-6 rounded-lg shadow-lg text-center"
│   │   │   │     67 │             whileHover={{ scale: 1.05 }}
│   │   │   │     68 │             transition={{ duration: 0.3 }}
│   │   │   │     69 │           >
│   │   │   │     70 │             <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3">
│   │   │   │     71 │               <svg
│   │   │   │     72 │                 xmlns="http://www.w3.org/2000/svg"
│   │   │   │     73 │                 className="h-6 w-6 text-purple-600"
│   │   │   │     74 │                 fill="none"
│   │   │   │     75 │                 viewBox="0 0 24 24"
│   │   │   │     76 │                 stroke="currentColor"
│   │   │   │     77 │               >
│   │   │   │     78 │                 <path
│   │   │   │     79 │                   strokeLinecap="round"
│   │   │   │     80 │                   strokeLinejoin="round"
│   │   │   │     81 │                   strokeWidth="2"
│   │   │   │     82 │                   d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"
│   │   │   │     83 │                 />
│   │   │   │     84 │               </svg>
│   │   │   │     85 │             </div>
│   │   │   │     86 │             <h3 className="font-medium text-gray-800">Marketing</h3>
│   │   │   │     87 │           </motion.div>
│   │   │   │     88 │         </Link>
│   │   │   │     89 │ 
│   │   │   │     90 │         {/* Health */}
│   │   │   │     91 │         <Link href="/categories/health">
│   │   │   │     92 │           <motion.div
│   │   │   │     93 │             className="category-card bg-white p-6 rounded-lg shadow-lg text-center"
│   │   │   │     94 │             whileHover={{ scale: 1.05 }}
│   │   │   │     95 │             transition={{ duration: 0.3 }}
│   │   │   │     96 │           >
│   │   │   │     97 │             <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-3">
│   │   │   │     98 │               <svg
│   │   │   │     99 │                 xmlns="http://www.w3.org/2000/svg"
│   │   │   │    100 │                 className="h-6 w-6 text-red-600"
│   │   │   │    101 │                 fill="none"
│   │   │   │    102 │                 viewBox="0 0 24 24"
│   │   │   │    103 │                 stroke="currentColor"
│   │   │   │    104 │               >
│   │   │   │    105 │                 <path
│   │   │   │    106 │                   strokeLinecap="round"
│   │   │   │    107 │                   strokeLinejoin="round"
│   │   │   │    108 │                   strokeWidth="2"
│   │   │   │    109 │                   d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
│   │   │   │    110 │                 />
│   │   │   │    111 │               </svg>
│   │   │   │    112 │             </div>
│   │   │   │    113 │             <h3 className="font-medium text-gray-800">Health</h3>
│   │   │   │    114 │           </motion.div>
│   │   │   │    115 │         </Link>
│   │   │   │    116 │       </div>
│   │   │   │    117 │     </div>
│   │   │   │    118 │   );
│   │   │   │    119 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 BusinessProfile.tsx
│   │   │   ├── FILINNHOLD (124 linjer):
│   │   │   │      1 │ import React from 'react';
│   │   │   │      2 │ 
│   │   │   │      3 │ interface BusinessProfileProps {
│   │   │   │      4 │   name: string;
│   │   │   │      5 │   categories: string[];
│   │   │   │      6 │   email: string;
│   │   │   │      7 │   phone: string;
│   │   │   │      8 │   address: string;
│   │   │   │      9 │   description: string;
│   │   │   │     10 │   website: string;
│   │   │   │     11 │   contactPerson: string;
│   │   │   │     12 │   orgNumber: string;
│   │   │   │     13 │ }
│   │   │   │     14 │ 
│   │   │   │     15 │ export default function BusinessProfile({
│   │   │   │     16 │   name,
│   │   │   │     17 │   categories,
│   │   │   │     18 │   email,
│   │   │   │     19 │   phone,
│   │   │   │     20 │   address,
│   │   │   │     21 │   description,
│   │   │   │     22 │   website,
│   │   │   │     23 │   contactPerson,
│   │   │   │     24 │   orgNumber,
│   │   │   │     25 │ }: BusinessProfileProps) {
│   │   │   │     26 │   return (
│   │   │   │     27 │     <main className="w-full max-w-full px-4 py-8">
│   │   │   │     28 │       {/* Business Header */}
│   │   │   │     29 │       <div className="bg-white rounded-lg shadow-md overflow-hidden mb-6">
│   │   │   │     30 │         <div className="h-56 bg-gradient-to-r from-blue-500 to-blue-700 relative">
│   │   │   │     31 │           <div className="absolute -bottom-16 left-8 w-36 h-36 bg-white rounded-full flex items-center justify-center text-blue-600 text-5xl font-bold border-4 border-white shadow-lg">
│   │   │   │     32 │             {name[0]}
│   │   │   │     33 │           </div>
│   │   │   │     34 │         </div>
│   │   │   │     35 │         <div className="p-8 pt-24">
│   │   │   │     36 │           <div className="flex justify-between items-start">
│   │   │   │     37 │             <div>
│   │   │   │     38 │               <h1 className="text-3xl font-bold mb-3 text-gray-800">{name}</h1>
│   │   │   │     39 │               <div className="flex flex-wrap mb-4">
│   │   │   │     40 │                 {categories.map((cat) => (
│   │   │   │     41 │                   <span key={cat} className="text-sm bg-blue-100 text-blue-800 px-3 py-1 rounded-full mr-2 mb-2 font-medium">
│   │   │   │     42 │                     {cat}
│   │   │   │     43 │                   </span>
│   │   │   │     44 │                 ))}
│   │   │   │     45 │               </div>
│   │   │   │     46 │             </div>
│   │   │   │     47 │             <button className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-base font-medium shadow-md">Send Message</button>
│   │   │   │     48 │           </div>
│   │   │   │     49 │           <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-gray-800 mb-4 mt-6">
│   │   │   │     50 │             <div>
│   │   │   │     51 │               <p className="font-semibold text-lg mb-1">Email:</p>
│   │   │   │     52 │               <p className="text-base">{email}</p>
│   │   │   │     53 │             </div>
│   │   │   │     54 │             <div>
│   │   │   │     55 │               <p className="font-semibold text-lg mb-1">Phone:</p>
│   │   │   │     56 │               <p className="text-base">{phone}</p>
│   │   │   │     57 │             </div>
│   │   │   │     58 │             <div>
│   │   │   │     59 │               <p className="font-semibold text-lg mb-1">Address:</p>
│   │   │   │     60 │               <p className="text-base">{address}</p>
│   │   │   │     61 │             </div>
│   │   │   │     62 │           </div>
│   │   │   │     63 │         </div>
│   │   │   │     64 │       </div>
│   │   │   │     65 │ 
│   │   │   │     66 │       {/* Business Information */}
│   │   │   │     67 │       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
│   │   │   │     68 │         <div className="lg:col-span-2">
│   │   │   │     69 │           {/* About Section */}
│   │   │   │     70 │           <div className="bg-white rounded-lg shadow-md p-8 mb-8">
│   │   │   │     71 │             <h2 className="text-2xl font-bold mb-4 text-gray-800">About Us</h2>
│   │   │   │     72 │             <p className="text-gray-800 text-lg leading-relaxed mb-4">{description}</p>
│   │   │   │     73 │           </div>
│   │   │   │     74 │ 
│   │   │   │     75 │           {/* Gallery Section */}
│   │   │   │     76 │           <div className="bg-white rounded-lg shadow-md p-8 mb-8">
│   │   │   │     77 │             <h2 className="text-2xl font-bold mb-6 text-gray-800">Gallery</h2>
│   │   │   │     78 │             <div className="grid grid-cols-2 md:grid-cols-3 gap-6">
│   │   │   │     79 │               <div className="h-40 bg-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow"></div>
│   │   │   │     80 │               <div className="h-40 bg-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow"></div>
│   │   │   │     81 │               <div className="h-40 bg-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow"></div>
│   │   │   │     82 │               <div className="h-40 bg-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow"></div>
│   │   │   │     83 │               <div className="h-40 bg-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow"></div>
│   │   │   │     84 │               <div className="h-40 bg-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow"></div>
│   │   │   │     85 │             </div>
│   │   │   │     86 │           </div>
│   │   │   │     87 │ 
│   │   │   │     88 │           {/* News Section */}
│   │   │   │     89 │           <div className="bg-white rounded-lg shadow-md p-8">
│   │   │   │     90 │             <h2 className="text-2xl font-bold mb-4 text-gray-800">Company News</h2>
│   │   │   │     91 │             <p className="text-gray-800 text-lg">No news available.</p>
│   │   │   │     92 │           </div>
│   │   │   │     93 │         </div>
│   │   │   │     94 │ 
│   │   │   │     95 │         <div>
│   │   │   │     96 │           {/* Contact & Info Section */}
│   │   │   │     97 │           <div className="bg-white rounded-lg shadow-md p-8 mb-8">
│   │   │   │     98 │             <h2 className="text-2xl font-bold mb-6 text-gray-800">More Information</h2>
│   │   │   │     99 │             <div className="mb-6">
│   │   │   │    100 │               <p className="font-semibold text-lg mb-1 text-gray-800">Website:</p>
│   │   │   │    101 │               <a href={website} className="text-blue-600 hover:underline text-base">{website}</a>
│   │   │   │    102 │             </div>
│   │   │   │    103 │             <div className="mb-6">
│   │   │   │    104 │               <p className="font-semibold text-lg mb-1 text-gray-800">Contact Person:</p>
│   │   │   │    105 │               <p className="text-gray-600 text-base">{contactPerson}</p>
│   │   │   │    106 │             </div>
│   │   │   │    107 │             <div className="mb-2">
│   │   │   │    108 │               <p className="font-semibold text-lg mb-1 text-gray-800">Organization Number:</p>
│   │   │   │    109 │               <p className="text-gray-600 text-base">{orgNumber}</p>
│   │   │   │    110 │             </div>
│   │   │   │    111 │           </div>
│   │   │   │    112 │ 
│   │   │   │    113 │           {/* Ad Banner */}
│   │   │   │    114 │           <div className="bg-gray-100 p-6 rounded-lg shadow-md text-center">
│   │   │   │    115 │             <p className="text-gray-700 font-medium mb-3">Advertisement</p>
│   │   │   │    116 │             <div className="h-56 bg-gray-200 rounded-lg flex items-center justify-center shadow-inner">
│   │   │   │    117 │               <p className="text-gray-600 font-medium">Your Ad Here</p>
│   │   │   │    118 │             </div>
│   │   │   │    119 │           </div>
│   │   │   │    120 │         </div>
│   │   │   │    121 │       </div>
│   │   │   │    122 │     </main>
│   │   │   │    123 │   );
│   │   │   │    124 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   📁 common/
│   │   │   📄 AdBanner.tsx
│   │   │   ├── FILINNHOLD (10 linjer):
│   │   │   │      1 │ export default function AdBanner() {
│   │   │   │      2 │   return (
│   │   │   │      3 │     <div className="bg-gray-200 p-4 rounded-lg text-center mb-8">
│   │   │   │      4 │       <p className="text-gray-600">Advertisement Space</p>
│   │   │   │      5 │       <div className="h-24 bg-gray-300 rounded flex items-center justify-center">
│   │   │   │      6 │         <p className="text-gray-500">Your Ad Here</p>
│   │   │   │      7 │       </div>
│   │   │   │      8 │     </div>
│   │   │   │      9 │   );
│   │   │   │     10 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 CategoryTabs.tsx
│   │   │   ├── FILINNHOLD (30 linjer):
│   │   │   │      1 │ import Link from "next/link";
│   │   │   │      2 │ import { useRouter } from "next/router";
│   │   │   │      3 │ 
│   │   │   │      4 │ export default function CategoryTabs() {
│   │   │   │      5 │   const router = useRouter();
│   │   │   │      6 │   const tabs = [
│   │   │   │      7 │     { name: "Businesses", href: "/" },
│   │   │   │      8 │     { name: "News Feed", href: "/news-feed" },
│   │   │   │      9 │     { name: "Map", href: "/map" },
│   │   │   │     10 │     { name: "About", href: "/about" },
│   │   │   │     11 │   ];
│   │   │   │     12 │ 
│   │   │   │     13 │   return (
│   │   │   │     14 │     <div className="flex justify-between mb-6 border-b border-gray-200">
│   │   │   │     15 │       {tabs.map((tab) => (
│   │   │   │     16 │         <Link key={tab.name} href={tab.href}>
│   │   │   │     17 │           <div
│   │   │   │     18 │             className={`px-4 py-2 font-medium ${
│   │   │   │     19 │               router.pathname === tab.href
│   │   │   │     20 │                 ? "text-blue-600 border-b-2 border-blue-600"
│   │   │   │     21 │                 : "text-gray-500 hover:text-blue-600"
│   │   │   │     22 │             }`}
│   │   │   │     23 │           >
│   │   │   │     24 │             {tab.name}
│   │   │   │     25 │           </div>
│   │   │   │     26 │         </Link>
│   │   │   │     27 │       ))}
│   │   │   │     28 │     </div>
│   │   │   │     29 │   );
│   │   │   │     30 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   📁 layout/
│   │   │   📄 Footer.tsx
│   │   │   ├── FILINNHOLD (30 linjer):
│   │   │   │      1 │ import Link from "next/link";
│   │   │   │      2 │ 
│   │   │   │      3 │ export default function Footer() {
│   │   │   │      4 │   return (
│   │   │   │      5 │     <footer className="bg-gray-800 text-white py-8">
│   │   │   │      6 │       <div className="container mx-auto px-4">
│   │   │   │      7 │         <div className="flex flex-col md:flex-row justify-between">
│   │   │   │      8 │           <div className="mb-6 md:mb-0">
│   │   │   │      9 │             <h2 className="text-xl font-bold mb-4">B2B Social</h2>
│   │   │   │     10 │             <p className="text-gray-400 max-w-md">
│   │   │   │     11 │               A platform designed to connect businesses together, promote collaboration, and create valuable business opportunities.
│   │   │   │     12 │             </p>
│   │   │   │     13 │           </div>
│   │   │   │     14 │           <div>
│   │   │   │     15 │             <h3 className="text-lg font-semibold mb-3">Quick Links</h3>
│   │   │   │     16 │             <ul>
│   │   │   │     17 │               <li className="mb-2"><Link href="/about" className="text-gray-400 hover:text-white">About Us</Link></li>
│   │   │   │     18 │               <li className="mb-2"><Link href="/businesses" className="text-gray-400 hover:text-white">Find Businesses</Link></li>
│   │   │   │     19 │               <li className="mb-2"><Link href="/map" className="text-gray-400 hover:text-white">Business Map</Link></li>
│   │   │   │     20 │               <li className="mb-2"><Link href="/login" className="text-gray-400 hover:text-white">Sign In</Link></li>
│   │   │   │     21 │             </ul>
│   │   │   │     22 │           </div>
│   │   │   │     23 │         </div>
│   │   │   │     24 │         <div className="border-t border-gray-700 mt-6 pt-6 text-center">
│   │   │   │     25 │           <p className="text-gray-400">© 2025 B2B Platform. All rights reserved.</p>
│   │   │   │     26 │         </div>
│   │   │   │     27 │       </div>
│   │   │   │     28 │     </footer>
│   │   │   │     29 │   );
│   │   │   │     30 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 Header.tsx
│   │   │   ├── FILINNHOLD (42 linjer):
│   │   │   │      1 │ import Link from "next/link";
│   │   │   │      2 │ 
│   │   │   │      3 │ export default function Header() {
│   │   │   │      4 │   return (
│   │   │   │      5 │     <header className="bg-blue-600 text-white">
│   │   │   │      6 │       <div className="container mx-auto px-4 py-3 flex justify-between items-center">
│   │   │   │      7 │         <div className="flex items-center">
│   │   │   │      8 │           <img src="/logo.svg" alt="B2B Social" className="h-8 w-8 mr-2" />
│   │   │   │      9 │           <h1 className="text-xl font-bold">B2B Social</h1>
│   │   │   │     10 │         </div>
│   │   │   │     11 │         <div className="hidden md:block">
│   │   │   │     12 │           <input
│   │   │   │     13 │             type="text"
│   │   │   │     14 │             placeholder="Search businesses..."
│   │   │   │     15 │             className="px-4 py-2 rounded-lg text-gray-800 w-64"
│   │   │   │     16 │           />
│   │   │   │     17 │         </div>
│   │   │   │     18 │         <nav className="flex items-center">
│   │   │   │     19 │           <button className="p-2 rounded hover:bg-blue-700">
│   │   │   │     20 │             <svg
│   │   │   │     21 │               xmlns="http://www.w3.org/2000/svg"
│   │   │   │     22 │               className="h-6 w-6"
│   │   │   │     23 │               fill="none"
│   │   │   │     24 │               viewBox="0 0 24 24"
│   │   │   │     25 │               stroke="currentColor"
│   │   │   │     26 │             >
│   │   │   │     27 │               <path
│   │   │   │     28 │                 strokeLinecap="round"
│   │   │   │     29 │                 strokeLinejoin="round"
│   │   │   │     30 │                 strokeWidth="2"
│   │   │   │     31 │                 d="M4 6h16M4 12h16M4 18h16"
│   │   │   │     32 │               />
│   │   │   │     33 │             </svg>
│   │   │   │     34 │           </button>
│   │   │   │     35 │           <Link href="/login" className="ml-4 px-4 py-2 bg-white text-blue-600 rounded-lg font-medium">
│   │   │   │     36 │             Login
│   │   │   │     37 │           </Link>
│   │   │   │     38 │         </nav>
│   │   │   │     39 │       </div>
│   │   │   │     40 │     </header>
│   │   │   │     41 │   );
│   │   │   │     42 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 Layout.tsx
│   │   │   ├── FILINNHOLD (21 linjer):
│   │   │   │      1 │ // src/components/layout/Layout.tsx
│   │   │   │      2 │ import { ReactNode } from "react";
│   │   │   │      3 │ import Header from "./Header";
│   │   │   │      4 │ import Footer from "./Footer";
│   │   │   │      5 │ import "@/styles/globals.css";
│   │   │   │      6 │ 
│   │   │   │      7 │ interface LayoutProps {
│   │   │   │      8 │   children: ReactNode;
│   │   │   │      9 │ }
│   │   │   │     10 │ 
│   │   │   │     11 │ export default function Layout({ children }: LayoutProps) {
│   │   │   │     12 │   return (
│   │   │   │     13 │     <div className="bg-gray-50 min-h-screen flex flex-col">
│   │   │   │     14 │       <Header />
│   │   │   │     15 │       <main className="container mx-auto px-4 py-8 flex-grow">{children}</main>
│   │   │   │     16 │       <Footer />
│   │   │   │     17 │       {/* Legg til suppressHydrationWarning på body hvis det er her problemet oppstår */}
│   │   │   │     18 │       <body suppressHydrationWarning={true} />
│   │   │   │     19 │     </div>
│   │   │   │     20 │   );
│   │   │   │     21 │ }
│   │   │   └── SLUTT PÅ FIL

│   📁 context/
│   │   📄 AuthContext.tsx
│   │   ├── FILINNHOLD (76 linjer):
│   │   │      1 │ // src/context/AuthContext.tsx
│   │   │      2 │ import { createContext, useContext, useEffect, useState, ReactNode } from "react";
│   │   │      3 │ import { onAuthStateChanged, User as FirebaseUser } from "firebase/auth";
│   │   │      4 │ import { doc, getDoc, collection, getDocs, query, where } from "firebase/firestore";
│   │   │      5 │ import { auth, db } from "@/lib/firebase";
│   │   │      6 │ import { Business, User } from "@/lib/types";
│   │   │      7 │ 
│   │   │      8 │ interface AuthContextType {
│   │   │      9 │   user: FirebaseUser | null;
│   │   │     10 │   userType: "business" | "user" | "unknown" | null;
│   │   │     11 │   userData: Business | User | null;
│   │   │     12 │   loading: boolean;
│   │   │     13 │ }
│   │   │     14 │ 
│   │   │     15 │ const AuthContext = createContext<AuthContextType>({
│   │   │     16 │   user: null,
│   │   │     17 │   userType: null,
│   │   │     18 │   userData: null,
│   │   │     19 │   loading: true,
│   │   │     20 │ });
│   │   │     21 │ 
│   │   │     22 │ export const AuthProvider = ({ children }: { children: ReactNode }) => {
│   │   │     23 │   const [user, setUser] = useState<FirebaseUser | null>(null);
│   │   │     24 │   const [userType, setUserType] = useState<"business" | "user" | "unknown" | null>(null);
│   │   │     25 │   const [userData, setUserData] = useState<Business | User | null>(null);
│   │   │     26 │   const [loading, setLoading] = useState(true);
│   │   │     27 │ 
│   │   │     28 │   const checkUserType = async (uid: string) => {
│   │   │     29 │     // Sjekk om brukeren er knyttet til en bedrift
│   │   │     30 │     const businessQuery = query(collection(db, "businesses"), where("userId", "==", uid));
│   │   │     31 │     const businessSnapshot = await getDocs(businessQuery);
│   │   │     32 │     if (!businessSnapshot.empty) {
│   │   │     33 │       const businessData = businessSnapshot.docs[0].data() as Business;
│   │   │     34 │       setUserType("business");
│   │   │     35 │       setUserData(businessData);
│   │   │     36 │       return { type: "business", data: businessData };
│   │   │     37 │     }
│   │   │     38 │ 
│   │   │     39 │     // Sjekk om brukeren er en privatperson
│   │   │     40 │     const userDoc = await getDoc(doc(db, "users", uid));
│   │   │     41 │     if (userDoc.exists()) {
│   │   │     42 │       const userData = userDoc.data() as User;
│   │   │     43 │       setUserType("user");
│   │   │     44 │       setUserData(userData);
│   │   │     45 │       return { type: "user", data: userData };
│   │   │     46 │     }
│   │   │     47 │ 
│   │   │     48 │     setUserType("unknown");
│   │   │     49 │     setUserData(null);
│   │   │     50 │     return { type: "unknown", data: null };
│   │   │     51 │   };
│   │   │     52 │ 
│   │   │     53 │   useEffect(() => {
│   │   │     54 │     const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {
│   │   │     55 │       if (firebaseUser) {
│   │   │     56 │         setUser(firebaseUser);
│   │   │     57 │         await checkUserType(firebaseUser.uid);
│   │   │     58 │       } else {
│   │   │     59 │         setUser(null);
│   │   │     60 │         setUserType(null);
│   │   │     61 │         setUserData(null);
│   │   │     62 │       }
│   │   │     63 │       setLoading(false);
│   │   │     64 │     });
│   │   │     65 │ 
│   │   │     66 │     return () => unsubscribe();
│   │   │     67 │   }, []);
│   │   │     68 │ 
│   │   │     69 │   return (
│   │   │     70 │     <AuthContext.Provider value={{ user, userType, userData, loading }}>
│   │   │     71 │       {children}
│   │   │     72 │     </AuthContext.Provider>
│   │   │     73 │   );
│   │   │     74 │ };
│   │   │     75 │ 
│   │   │     76 │ export const useAuth = () => useContext(AuthContext);
│   │   └── SLUTT PÅ FIL

│   📁 hooks/
│   📁 lib/
│   │   📄 firebase.ts
│   │   ├── FILINNHOLD (19 linjer):
│   │   │      1 │ // src/lib/firebase.ts
│   │   │      2 │ import { initializeApp } from "firebase/app";
│   │   │      3 │ import { getFirestore } from "firebase/firestore";
│   │   │      4 │ import { getAuth } from "firebase/auth";
│   │   │      5 │ import { getStorage } from "firebase/storage";
│   │   │      6 │ 
│   │   │      7 │ const firebaseConfig = {
│   │   │      8 │   apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
│   │   │      9 │   authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
│   │   │     10 │   projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
│   │   │     11 │   storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
│   │   │     12 │   messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
│   │   │     13 │   appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
│   │   │     14 │ };
│   │   │     15 │ 
│   │   │     16 │ const app = initializeApp(firebaseConfig);
│   │   │     17 │ export const db = getFirestore(app);
│   │   │     18 │ export const auth = getAuth(app);
│   │   │     19 │ export const storage = getStorage(app);
│   │   └── SLUTT PÅ FIL

│   │   📄 types.ts
│   │   ├── FILINNHOLD (41 linjer):
│   │   │      1 │ // src/lib/types.ts
│   │   │      2 │ export interface Business {
│   │   │      3 │   id: string;
│   │   │      4 │   name: string;
│   │   │      5 │   description: string;
│   │   │      6 │   tags: string[];
│   │   │      7 │   category: string;
│   │   │      8 │   companyType: string;
│   │   │      9 │   email: string;
│   │   │     10 │   phone: string;
│   │   │     11 │   address: string;
│   │   │     12 │   postalCode: string;
│   │   │     13 │   city: string;
│   │   │     14 │   website?: string;
│   │   │     15 │   contact: {
│   │   │     16 │     firstName: string;
│   │   │     17 │     lastName: string;
│   │   │     18 │     email: string;
│   │   │     19 │     phone?: string;
│   │   │     20 │     position: string;
│   │   │     21 │   };
│   │   │     22 │   userId: string;
│   │   │     23 │   createdAt: string;
│   │   │     24 │   profileImage?: string; // URL til profilbildet
│   │   │     25 │   backgroundImage?: string; // URL til bakgrunnsbildet
│   │   │     26 │   galleryImages?: string[]; // URL-er til bilder i galleriet (kun for bedrifter)
│   │   │     27 │ }
│   │   │     28 │ 
│   │   │     29 │ export interface User {
│   │   │     30 │   id: string;
│   │   │     31 │   firstName: string;
│   │   │     32 │   lastName: string;
│   │   │     33 │   email: string;
│   │   │     34 │   phone?: string;
│   │   │     35 │   profession?: string;
│   │   │     36 │   industry?: string;
│   │   │     37 │   newsletter: boolean;
│   │   │     38 │   createdAt: string;
│   │   │     39 │   profileImage?: string; // URL til profilbildet
│   │   │     40 │   backgroundImage?: string; // URL til bakgrunnsbildet
│   │   │     41 │ }
│   │   └── SLUTT PÅ FIL

│   📁 pages/
│   │   📄 index.tsx
│   │   ├── FILINNHOLD (51 linjer):
│   │   │      1 │ import Link from "next/link";
│   │   │      2 │ import { motion } from "framer-motion";
│   │   │      3 │ import Layout from "@/components/layout/Layout";
│   │   │      4 │ import BusinessCard from "@/components/business/BusinessCard";
│   │   │      5 │ import BusinessCategories from "@/components/business/BusinessCategories";
│   │   │      6 │ import CategoryTabs from "@/components/common/CategoryTabs";
│   │   │      7 │ import AdBanner from "@/components/common/AdBanner";
│   │   │      8 │ 
│   │   │      9 │ const businesses = [
│   │   │     10 │   { id: "fixitt-as", name: "Fixitt AS", tags: ["service", "webdesign"], description: "We handle all your IT needs and make life easier for you." },
│   │   │     11 │   { id: "bon-as", name: "BON AS", tags: ["beverage", "distributor"], description: "We produce the world's best seltzer water without additives." },
│   │   │     12 │   { id: "unknown", name: "Unknown Business", tags: ["Other"], description: "No description available." },
│   │   │     13 │ ];
│   │   │     14 │ 
│   │   │     15 │ export default function HomePage() {
│   │   │     16 │   return (
│   │   │     17 │     <Layout>
│   │   │     18 │       {/* Category Tabs - Strekker seg over hele bredden */}
│   │   │     19 │       <CategoryTabs />
│   │   │     20 │ 
│   │   │     21 │       {/* Featured Businesses */}
│   │   │     22 │       <div className="mb-12">
│   │   │     23 │         <div className="flex justify-between items-center mb-4">
│   │   │     24 │           <h1 className="text-2xl font-bold">Featured Businesses</h1>
│   │   │     25 │           <Link href="/businesses" className="text-blue-600 hover:underline">
│   │   │     26 │             View All
│   │   │     27 │           </Link>
│   │   │     28 │         </div>
│   │   │     29 │         <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
│   │   │     30 │           {businesses.map((business) => (
│   │   │     31 │             <Link key={business.id} href={`/businesses/${business.id}`}>
│   │   │     32 │               <motion.div
│   │   │     33 │                 className="business-card relative"
│   │   │     34 │                 whileHover={{ scale: 1.03, y: -5 }}
│   │   │     35 │                 transition={{ duration: 0.3 }}
│   │   │     36 │               >
│   │   │     37 │                 <BusinessCard {...business} />
│   │   │     38 │               </motion.div>
│   │   │     39 │             </Link>
│   │   │     40 │           ))}
│   │   │     41 │         </div>
│   │   │     42 │       </div>
│   │   │     43 │ 
│   │   │     44 │       {/* Business Categories */}
│   │   │     45 │       <BusinessCategories />
│   │   │     46 │ 
│   │   │     47 │       {/* Ad Banner */}
│   │   │     48 │       <AdBanner />
│   │   │     49 │     </Layout>
│   │   │     50 │   );
│   │   │     51 │ }
│   │   └── SLUTT PÅ FIL

│   │   📄 login.tsx
│   │   ├── FILINNHOLD (103 linjer):
│   │   │      1 │ // src/pages/login.tsx
│   │   │      2 │ import { useState } from "react";
│   │   │      3 │ import { useRouter } from "next/router";
│   │   │      4 │ import Link from "next/link";
│   │   │      5 │ import { signInWithEmailAndPassword } from "firebase/auth";
│   │   │      6 │ import { auth } from "@/lib/firebase";
│   │   │      7 │ 
│   │   │      8 │ export default function Login() {
│   │   │      9 │   const router = useRouter();
│   │   │     10 │   const [email, setEmail] = useState("");
│   │   │     11 │   const [password, setPassword] = useState("");
│   │   │     12 │   const [error, setError] = useState<string | null>(null);
│   │   │     13 │ 
│   │   │     14 │   const handleSubmit = async (e: React.FormEvent) => {
│   │   │     15 │     e.preventDefault();
│   │   │     16 │     setError(null);
│   │   │     17 │ 
│   │   │     18 │     try {
│   │   │     19 │       // Logg inn brukeren med e-post og passord
│   │   │     20 │       await signInWithEmailAndPassword(auth, email, password);
│   │   │     21 │ 
│   │   │     22 │       // Redirect til hjemmesiden etter vellykket innlogging
│   │   │     23 │       router.push("/");
│   │   │     24 │     } catch (err: any) {
│   │   │     25 │       setError(err.message);
│   │   │     26 │     }
│   │   │     27 │   };
│   │   │     28 │ 
│   │   │     29 │   return (
│   │   │     30 │     <div className="bg-gray-50 min-h-screen">
│   │   │     31 │       <nav className="bg-blue-600 p-4 flex justify-between items-center">
│   │   │     32 │         <Link href="/" className="flex items-center text-white font-bold text-xl hover:text-blue-100">
│   │   │     33 │           <img src="/logo.svg" alt="B2B Logo" className="w-8 h-8 mr-2" />
│   │   │     34 │           B2B Social
│   │   │     35 │         </Link>
│   │   │     36 │       </nav>
│   │   │     37 │ 
│   │   │     38 │       <div className="max-w-md mx-auto mt-12 bg-white rounded-lg shadow-md p-8">
│   │   │     39 │         <h1 className="text-2xl font-bold text-center mb-8 text-gray-800">Logg inn</h1>
│   │   │     40 │ 
│   │   │     41 │         {error && <p className="text-red-500 text-center mb-4">{error}</p>}
│   │   │     42 │ 
│   │   │     43 │         <form onSubmit={handleSubmit}>
│   │   │     44 │           <div className="mb-5">
│   │   │     45 │             <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
│   │   │     46 │               E-post
│   │   │     47 │             </label>
│   │   │     48 │             <input
│   │   │     49 │               type="email"
│   │   │     50 │               id="email"
│   │   │     51 │               value={email}
│   │   │     52 │               onChange={(e) => setEmail(e.target.value)}
│   │   │     53 │               placeholder="din@epost.no"
│   │   │     54 │               className="w-full p-3 border border-gray-300 rounded-md text-base focus:outline-none focus:ring-2 focus:ring-blue-300"
│   │   │     55 │               required
│   │   │     56 │             />
│   │   │     57 │           </div>
│   │   │     58 │ 
│   │   │     59 │           <div className="mb-5">
│   │   │     60 │             <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-2">
│   │   │     61 │               Passord
│   │   │     62 │             </label>
│   │   │     63 │             <input
│   │   │     64 │               type="password"
│   │   │     65 │               id="password"
│   │   │     66 │               value={password}
│   │   │     67 │               onChange={(e) => setPassword(e.target.value)}
│   │   │     68 │               placeholder="••••••••"
│   │   │     69 │               className="w-full p-3 border border-gray-300 rounded-md text-base focus:outline-none focus:ring-2 focus:ring-blue-300"
│   │   │     70 │               required
│   │   │     71 │             />
│   │   │     72 │           </div>
│   │   │     73 │ 
│   │   │     74 │           <button
│   │   │     75 │             type="submit"
│   │   │     76 │             className="w-full bg-blue-600 text-white p-3 rounded-md text-base font-medium hover:bg-blue-700 transition-colors"
│   │   │     77 │           >
│   │   │     78 │             Logg inn
│   │   │     79 │           </button>
│   │   │     80 │ 
│   │   │     81 │           <div className="mt-5 text-center">
│   │   │     82 │             <Link href="#" className="text-blue-600 hover:underline mx-2">
│   │   │     83 │               Glemt passord?
│   │   │     84 │             </Link>
│   │   │     85 │           </div>
│   │   │     86 │         </form>
│   │   │     87 │ 
│   │   │     88 │         <div className="mt-8 text-center text-gray-600 text-sm">
│   │   │     89 │           <p>
│   │   │     90 │             Har du ikke en konto?{" "}
│   │   │     91 │             <Link href="/register-user" className="text-blue-600 hover:underline">
│   │   │     92 │               Registrer deg som privatperson
│   │   │     93 │             </Link>{" "}
│   │   │     94 │             eller{" "}
│   │   │     95 │             <Link href="/register-business" className="text-blue-600 hover:underline">
│   │   │     96 │               som bedrift
│   │   │     97 │             </Link>
│   │   │     98 │           </p>
│   │   │     99 │         </div>
│   │   │    100 │       </div>
│   │   │    101 │     </div>
│   │   │    102 │   );
│   │   │    103 │ }
│   │   └── SLUTT PÅ FIL

│   │   📄 register-business.tsx
│   │   ├── FILINNHOLD (486 linjer):
│   │   │      1 │ // src/pages/register-business.tsx
│   │   │      2 │ import { useState } from "react";
│   │   │      3 │ import { useRouter } from "next/router";
│   │   │      4 │ import Link from "next/link";
│   │   │      5 │ import { createUserWithEmailAndPassword } from "firebase/auth";
│   │   │      6 │ import { doc, setDoc } from "firebase/firestore";
│   │   │      7 │ import { auth, db } from "@/lib/firebase";
│   │   │      8 │ import ImageUpload from "@/components/ImageUpload";
│   │   │      9 │ 
│   │   │     10 │ export default function RegisterBusiness() {
│   │   │     11 │   const router = useRouter();
│   │   │     12 │   const [formData, setFormData] = useState({
│   │   │     13 │     companyName: "",
│   │   │     14 │     orgNumber: "",
│   │   │     15 │     companyType: "",
│   │   │     16 │     description: "",
│   │   │     17 │     category: "",
│   │   │     18 │     tags: [] as string[],
│   │   │     19 │     businessEmail: "",
│   │   │     20 │     businessPhone: "",
│   │   │     21 │     website: "",
│   │   │     22 │     address: "",
│   │   │     23 │     postalCode: "",
│   │   │     24 │     city: "",
│   │   │     25 │     contactFirstName: "",
│   │   │     26 │     contactLastName: "",
│   │   │     27 │     contactEmail: "",
│   │   │     28 │     contactPhone: "",
│   │   │     29 │     position: "",
│   │   │     30 │     termsAccepted: false,
│   │   │     31 │     privacyAccepted: false,
│   │   │     32 │     newsletter: false,
│   │   │     33 │     profileImage: "",
│   │   │     34 │     backgroundImage: "",
│   │   │     35 │   });
│   │   │     36 │ 
│   │   │     37 │   const [error, setError] = useState<string | null>(null);
│   │   │     38 │ 
│   │   │     39 │   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
│   │   │     40 │     const { name, value, type } = e.target;
│   │   │     41 │     if (type === "checkbox") {
│   │   │     42 │       setFormData({ ...formData, [name]: (e.target as HTMLInputElement).checked });
│   │   │     43 │     } else {
│   │   │     44 │       setFormData({ ...formData, [name]: value });
│   │   │     45 │     }
│   │   │     46 │   };
│   │   │     47 │ 
│   │   │     48 │   const handleTagToggle = (tag: string) => {
│   │   │     49 │     setFormData((prev) => ({
│   │   │     50 │       ...prev,
│   │   │     51 │       tags: prev.tags.includes(tag) ? prev.tags.filter((t) => t !== tag) : [...prev.tags, tag],
│   │   │     52 │     }));
│   │   │     53 │   };
│   │   │     54 │ 
│   │   │     55 │   const handleSubmit = async (e: React.FormEvent) => {
│   │   │     56 │     e.preventDefault();
│   │   │     57 │     setError(null);
│   │   │     58 │ 
│   │   │     59 │     if (!formData.termsAccepted || !formData.privacyAccepted) {
│   │   │     60 │       setError("Du må godta vilkårene og personvernerklæringen.");
│   │   │     61 │       return;
│   │   │     62 │     }
│   │   │     63 │ 
│   │   │     64 │     try {
│   │   │     65 │       const userCredential = await createUserWithEmailAndPassword(
│   │   │     66 │         auth,
│   │   │     67 │         formData.contactEmail,
│   │   │     68 │         formData.contactFirstName + "1234"
│   │   │     69 │       );
│   │   │     70 │       const user = userCredential.user;
│   │   │     71 │ 
│   │   │     72 │       await setDoc(doc(db, "businesses", formData.orgNumber), {
│   │   │     73 │         companyName: formData.companyName,
│   │   │     74 │         orgNumber: formData.orgNumber,
│   │   │     75 │         companyType: formData.companyType,
│   │   │     76 │         description: formData.description,
│   │   │     77 │         category: formData.category,
│   │   │     78 │         tags: formData.tags,
│   │   │     79 │         businessEmail: formData.businessEmail,
│   │   │     80 │         businessPhone: formData.businessPhone,
│   │   │     81 │         website: formData.website,
│   │   │     82 │         address: formData.address,
│   │   │     83 │         postalCode: formData.postalCode,
│   │   │     84 │         city: formData.city,
│   │   │     85 │         contact: {
│   │   │     86 │           firstName: formData.contactFirstName,
│   │   │     87 │           lastName: formData.contactLastName,
│   │   │     88 │           email: formData.contactEmail,
│   │   │     89 │           phone: formData.contactPhone,
│   │   │     90 │           position: formData.position,
│   │   │     91 │         },
│   │   │     92 │         userId: user.uid,
│   │   │     93 │         createdAt: new Date().toISOString(),
│   │   │     94 │         profileImage: formData.profileImage || null,
│   │   │     95 │         backgroundImage: formData.backgroundImage || null,
│   │   │     96 │         galleryImages: [], // Tom liste for bildegalleri ved registrering
│   │   │     97 │       });
│   │   │     98 │ 
│   │   │     99 │       router.push(`/profile/business/${formData.orgNumber}`);
│   │   │    100 │     } catch (err: any) {
│   │   │    101 │       setError(err.message);
│   │   │    102 │     }
│   │   │    103 │   };
│   │   │    104 │ 
│   │   │    105 │   return (
│   │   │    106 │     <div className="bg-gray-50 min-h-screen">
│   │   │    107 │       <nav className="bg-blue-600 p-4 flex justify-between items-center">
│   │   │    108 │         <Link href="/" className="flex items-center text-white font-bold text-xl hover:text-blue-100">
│   │   │    109 │           <img src="/logo.svg" alt="B2B Logo" className="w-8 h-8 mr-2" />
│   │   │    110 │           B2B Social
│   │   │    111 │         </Link>
│   │   │    112 │       </nav>
│   │   │    113 │ 
│   │   │    114 │       <div className="max-w-3xl mx-auto mt-10 bg-white rounded-lg shadow-md p-8">
│   │   │    115 │         <h1 className="text-2xl font-bold text-center mb-8 text-black">Registrer din bedrift</h1>
│   │   │    116 │ 
│   │   │    117 │         {error && <p className="text-red-500 text-center mb-4">{error}</p>}
│   │   │    118 │ 
│   │   │    119 │         <form onSubmit={handleSubmit}>
│   │   │    120 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │    121 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Bedriftsinformasjon</h2>
│   │   │    122 │ 
│   │   │    123 │             <div className="mb-4">
│   │   │    124 │               <label htmlFor="companyName" className="block text-sm font-medium text-black mb-2">
│   │   │    125 │                 Bedriftsnavn
│   │   │    126 │               </label>
│   │   │    127 │               <input
│   │   │    128 │                 type="text"
│   │   │    129 │                 id="companyName"
│   │   │    130 │                 name="companyName"
│   │   │    131 │                 value={formData.companyName}
│   │   │    132 │                 onChange={handleChange}
│   │   │    133 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    134 │                 required
│   │   │    135 │               />
│   │   │    136 │             </div>
│   │   │    137 │ 
│   │   │    138 │             <div className="flex gap-4 mb-4">
│   │   │    139 │               <div className="flex-1">
│   │   │    140 │                 <label htmlFor="orgNumber" className="block text-sm font-medium text-black mb-2">
│   │   │    141 │                   Organisasjonsnummer
│   │   │    142 │                 </label>
│   │   │    143 │                 <input
│   │   │    144 │                   type="text"
│   │   │    145 │                   id="orgNumber"
│   │   │    146 │                   name="orgNumber"
│   │   │    147 │                   value={formData.orgNumber}
│   │   │    148 │                   onChange={handleChange}
│   │   │    149 │                   placeholder="9 siffer"
│   │   │    150 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    151 │                   required
│   │   │    152 │                 />
│   │   │    153 │               </div>
│   │   │    154 │               <div className="flex-1">
│   │   │    155 │                 <label htmlFor="companyType" className="block text-sm font-medium text-black mb-2">
│   │   │    156 │                   Selskapsform
│   │   │    157 │                 </label>
│   │   │    158 │                 <select
│   │   │    159 │                   id="companyType"
│   │   │    160 │                   name="companyType"
│   │   │    161 │                   value={formData.companyType}
│   │   │    162 │                   onChange={handleChange}
│   │   │    163 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    164 │                   required
│   │   │    165 │                 >
│   │   │    166 │                   <option value="">Velg selskapsform</option>
│   │   │    167 │                   <option value="as">Aksjeselskap (AS)</option>
│   │   │    168 │                   <option value="enkeltpersonforetak">Enkeltpersonforetak</option>
│   │   │    169 │                   <option value="ans">Ansvarlig selskap (ANS)</option>
│   │   │    170 │                   <option value="other">Annet</option>
│   │   │    171 │                 </select>
│   │   │    172 │               </div>
│   │   │    173 │             </div>
│   │   │    174 │ 
│   │   │    175 │             <div className="mb-4">
│   │   │    176 │               <label htmlFor="description" className="block text-sm font-medium text-black mb-2">
│   │   │    177 │                 Kort beskrivelse av bedriften
│   │   │    178 │               </label>
│   │   │    179 │               <textarea
│   │   │    180 │                 id="description"
│   │   │    181 │                 name="description"
│   │   │    182 │                 value={formData.description}
│   │   │    183 │                 onChange={handleChange}
│   │   │    184 │                 placeholder="Fortell litt om hva bedriften din gjør..."
│   │   │    185 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black min-h-[100px]"
│   │   │    186 │               />
│   │   │    187 │             </div>
│   │   │    188 │ 
│   │   │    189 │             <div className="mb-4">
│   │   │    190 │               <label htmlFor="category" className="block text-sm font-medium text-black mb-2">
│   │   │    191 │                 Hovedkategori
│   │   │    192 │               </label>
│   │   │    193 │               <select
│   │   │    194 │                 id="category"
│   │   │    195 │                 name="category"
│   │   │    196 │                 value={formData.category}
│   │   │    197 │                 onChange={handleChange}
│   │   │    198 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    199 │                 required
│   │   │    200 │               >
│   │   │    201 │                 <option value="">Velg kategori</option>
│   │   │    202 │                 <option value="technology">Teknologi</option>
│   │   │    203 │                 <option value="finance">Finans</option>
│   │   │    204 │                 <option value="marketing">Markedsføring</option>
│   │   │    205 │                 <option value="health">Helse</option>
│   │   │    206 │                 <option value="other">Annet</option>
│   │   │    207 │               </select>
│   │   │    208 │             </div>
│   │   │    209 │ 
│   │   │    210 │             <div className="mb-4">
│   │   │    211 │               <label className="block text-sm font-medium text-black mb-2">
│   │   │    212 │                 Tagger (velg alle som passer)
│   │   │    213 │               </label>
│   │   │    214 │               <div className="flex flex-wrap gap-2">
│   │   │    215 │                 {["service", "webdesign", "produsent", "distributør", "leverandør", "grossist", "konsulent", "teknologi"].map((tag) => (
│   │   │    216 │                   <div
│   │   │    217 │                     key={tag}
│   │   │    218 │                     onClick={() => handleTagToggle(tag)}
│   │   │    219 │                     className={`px-4 py-2 rounded-full cursor-pointer ${
│   │   │    220 │                       formData.tags.includes(tag) ? "bg-blue-600 text-white" : "bg-gray-200 text-black"
│   │   │    221 │                     }`}
│   │   │    222 │                   >
│   │   │    223 │                     {tag}
│   │   │    224 │                   </div>
│   │   │    225 │                 ))}
│   │   │    226 │               </div>
│   │   │    227 │             </div>
│   │   │    228 │           </div>
│   │   │    229 │ 
│   │   │    230 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │    231 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Kontaktinformasjon</h2>
│   │   │    232 │ 
│   │   │    233 │             <div className="mb-4">
│   │   │    234 │               <label htmlFor="businessEmail" className="block text-sm font-medium text-black mb-2">
│   │   │    235 │                 Bedriftens e-post
│   │   │    236 │               </label>
│   │   │    237 │               <input
│   │   │    238 │                 type="email"
│   │   │    239 │                 id="businessEmail"
│   │   │    240 │                 name="businessEmail"
│   │   │    241 │                 value={formData.businessEmail}
│   │   │    242 │                 onChange={handleChange}
│   │   │    243 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    244 │                 required
│   │   │    245 │               />
│   │   │    246 │             </div>
│   │   │    247 │ 
│   │   │    248 │             <div className="mb-4">
│   │   │    249 │               <label htmlFor="businessPhone" className="block text-sm font-medium text-black mb-2">
│   │   │    250 │                 Telefonnummer
│   │   │    251 │               </label>
│   │   │    252 │               <input
│   │   │    253 │                 type="tel"
│   │   │    254 │                 id="businessPhone"
│   │   │    255 │                 name="businessPhone"
│   │   │    256 │                 value={formData.businessPhone}
│   │   │    257 │                 onChange={handleChange}
│   │   │    258 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    259 │                 required
│   │   │    260 │               />
│   │   │    261 │             </div>
│   │   │    262 │ 
│   │   │    263 │             <div className="mb-4">
│   │   │    264 │               <label htmlFor="website" className="block text-sm font-medium text-black mb-2">
│   │   │    265 │                 Nettside
│   │   │    266 │               </label>
│   │   │    267 │               <input
│   │   │    268 │                 type="url"
│   │   │    269 │                 id="website"
│   │   │    270 │                 name="website"
│   │   │    271 │                 value={formData.website}
│   │   │    272 │                 onChange={handleChange}
│   │   │    273 │                 placeholder="https://www.dinenettside.no"
│   │   │    274 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    275 │               />
│   │   │    276 │             </div>
│   │   │    277 │ 
│   │   │    278 │             <div className="mb-4">
│   │   │    279 │               <label htmlFor="address" className="block text-sm font-medium text-black mb-2">
│   │   │    280 │                 Adresse
│   │   │    281 │               </label>
│   │   │    282 │               <input
│   │   │    283 │                 type="text"
│   │   │    284 │                 id="address"
│   │   │    285 │                 name="address"
│   │   │    286 │                 value={formData.address}
│   │   │    287 │                 onChange={handleChange}
│   │   │    288 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    289 │                 required
│   │   │    290 │               />
│   │   │    291 │             </div>
│   │   │    292 │ 
│   │   │    293 │             <div className="flex gap-4 mb-4">
│   │   │    294 │               <div className="flex-1">
│   │   │    295 │                 <label htmlFor="postalCode" className="block text-sm font-medium text-black mb-2">
│   │   │    296 │                   Postnummer
│   │   │    297 │                 </label>
│   │   │    298 │                 <input
│   │   │    299 │                   type="text"
│   │   │    300 │                   id="postalCode"
│   │   │    301 │                   name="postalCode"
│   │   │    302 │                   value={formData.postalCode}
│   │   │    303 │                   onChange={handleChange}
│   │   │    304 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    305 │                   required
│   │   │    306 │                 />
│   │   │    307 │               </div>
│   │   │    308 │               <div className="flex-1">
│   │   │    309 │                 <label htmlFor="city" className="block text-sm font-medium text-black mb-2">
│   │   │    310 │                   Poststed
│   │   │    311 │                 </label>
│   │   │    312 │                 <input
│   │   │    313 │                   type="text"
│   │   │    314 │                   id="city"
│   │   │    315 │                   name="city"
│   │   │    316 │                   value={formData.city}
│   │   │    317 │                   onChange={handleChange}
│   │   │    318 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    319 │                   required
│   │   │    320 │                 />
│   │   │    321 │               </div>
│   │   │    322 │             </div>
│   │   │    323 │           </div>
│   │   │    324 │ 
│   │   │    325 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │    326 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Kontaktperson</h2>
│   │   │    327 │ 
│   │   │    328 │             <div className="flex gap-4 mb-4">
│   │   │    329 │               <div className="flex-1">
│   │   │    330 │                 <label htmlFor="contactFirstName" className="block text-sm font-medium text-black mb-2">
│   │   │    331 │                   Fornavn
│   │   │    332 │                 </label>
│   │   │    333 │                 <input
│   │   │    334 │                   type="text"
│   │   │    335 │                   id="contactFirstName"
│   │   │    336 │                   name="contactFirstName"
│   │   │    337 │                   value={formData.contactFirstName}
│   │   │    338 │                   onChange={handleChange}
│   │   │    339 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    340 │                   required
│   │   │    341 │                 />
│   │   │    342 │               </div>
│   │   │    343 │               <div className="flex-1">
│   │   │    344 │                 <label htmlFor="contactLastName" className="block text-sm font-medium text-black mb-2">
│   │   │    345 │                   Etternavn
│   │   │    346 │                 </label>
│   │   │    347 │                 <input
│   │   │    348 │                   type="text"
│   │   │    349 │                   id="contactLastName"
│   │   │    350 │                   name="contactLastName"
│   │   │    351 │                   value={formData.contactLastName}
│   │   │    352 │                   onChange={handleChange}
│   │   │    353 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    354 │                   required
│   │   │    355 │                 />
│   │   │    356 │               </div>
│   │   │    357 │             </div>
│   │   │    358 │ 
│   │   │    359 │             <div className="mb-4">
│   │   │    360 │               <label htmlFor="contactEmail" className="block text-sm font-medium text-black mb-2">
│   │   │    361 │                 E-post
│   │   │    362 │               </label>
│   │   │    363 │               <input
│   │   │    364 │                 type="email"
│   │   │    365 │                 id="contactEmail"
│   │   │    366 │                 name="contactEmail"
│   │   │    367 │                 value={formData.contactEmail}
│   │   │    368 │                 onChange={handleChange}
│   │   │    369 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    370 │                 required
│   │   │    371 │               />
│   │   │    372 │             </div>
│   │   │    373 │ 
│   │   │    374 │             <div className="mb-4">
│   │   │    375 │               <label htmlFor="contactPhone" className="block text-sm font-medium text-black mb-2">
│   │   │    376 │                 Telefonnummer
│   │   │    377 │               </label>
│   │   │    378 │               <input
│   │   │    379 │                 type="tel"
│   │   │    380 │                 id="contactPhone"
│   │   │    381 │                 name="contactPhone"
│   │   │    382 │                 value={formData.contactPhone}
│   │   │    383 │                 onChange={handleChange}
│   │   │    384 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    385 │               />
│   │   │    386 │             </div>
│   │   │    387 │ 
│   │   │    388 │             <div className="mb-4">
│   │   │    389 │               <label htmlFor="position" className="block text-sm font-medium text-black mb-2">
│   │   │    390 │                 Stilling
│   │   │    391 │               </label>
│   │   │    392 │               <input
│   │   │    393 │                 type="text"
│   │   │    394 │                 id="position"
│   │   │    395 │                 name="position"
│   │   │    396 │                 value={formData.position}
│   │   │    397 │                 onChange={handleChange}
│   │   │    398 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    399 │                 required
│   │   │    400 │               />
│   │   │    401 │             </div>
│   │   │    402 │           </div>
│   │   │    403 │ 
│   │   │    404 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │    405 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Profilbilde og bakgrunnsbilde</h2>
│   │   │    406 │ 
│   │   │    407 │             <ImageUpload
│   │   │    408 │               label="Last opp bedriftslogo"
│   │   │    409 │               onUpload={(url) => setFormData({ ...formData, profileImage: url })}
│   │   │    410 │               recommendedSize="200x200 px"
│   │   │    411 │               maxSizeMB={2}
│   │   │    412 │             />
│   │   │    413 │ 
│   │   │    414 │             <ImageUpload
│   │   │    415 │               label="Last opp bakgrunnsbilde (valgfritt)"
│   │   │    416 │               onUpload={(url) => setFormData({ ...formData, backgroundImage: url })}
│   │   │    417 │               recommendedSize="1200x400 px"
│   │   │    418 │               maxSizeMB={5}
│   │   │    419 │             />
│   │   │    420 │           </div>
│   │   │    421 │ 
│   │   │    422 │           <div className="mb-6">
│   │   │    423 │             <label className="flex items-start mb-2">
│   │   │    424 │               <input
│   │   │    425 │                 type="checkbox"
│   │   │    426 │                 name="termsAccepted"
│   │   │    427 │                 checked={formData.termsAccepted}
│   │   │    428 │                 onChange={handleChange}
│   │   │    429 │                 className="mr-2 mt-1"
│   │   │    430 │                 required
│   │   │    431 │               />
│   │   │    432 │               <span className="text-black">
│   │   │    433 │                 Jeg bekrefter at jeg har fullmakt til å registrere denne bedriften og at all informasjon er korrekt
│   │   │    434 │               </span>
│   │   │    435 │             </label>
│   │   │    436 │ 
│   │   │    437 │             <label className="flex items-start mb-2">
│   │   │    438 │               <input
│   │   │    439 │                 type="checkbox"
│   │   │    440 │                 name="privacyAccepted"
│   │   │    441 │                 checked={formData.privacyAccepted}
│   │   │    442 │                 onChange={handleChange}
│   │   │    443 │                 className="mr-2 mt-1"
│   │   │    444 │                 required
│   │   │    445 │               />
│   │   │    446 │               <span className="text-black">
│   │   │    447 │                 Jeg godtar <Link href="#" className="text-blue-600 hover:underline">vilkårene for bruk</Link> og{" "}
│   │   │    448 │                 <Link href="#" className="text-blue-600 hover:underline">personvernerklæringen</Link>
│   │   │    449 │               </span>
│   │   │    450 │             </label>
│   │   │    451 │ 
│   │   │    452 │             <label className="flex items-start">
│   │   │    453 │               <input
│   │   │    454 │                 type="checkbox"
│   │   │    455 │                 name="newsletter"
│   │   │    456 │                 checked={formData.newsletter}
│   │   │    457 │                 onChange={handleChange}
│   │   │    458 │                 className="mr-2 mt-1"
│   │   │    459 │               />
│   │   │    460 │               <span className="text-black">Jeg ønsker å motta nyhetsbrev med oppdateringer og tilbud</span>
│   │   │    461 │             </label>
│   │   │    462 │           </div>
│   │   │    463 │ 
│   │   │    464 │           <button type="submit" className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700">
│   │   │    465 │             Registrer bedrift
│   │   │    466 │           </button>
│   │   │    467 │         </form>
│   │   │    468 │ 
│   │   │    469 │         <div className="text-center mt-6 text-gray-600">
│   │   │    470 │           <p>
│   │   │    471 │             Har du allerede registrert din bedrift?{" "}
│   │   │    472 │             <Link href="/login" className="text-blue-600 hover:underline">
│   │   │    473 │               Logg inn
│   │   │    474 │             </Link>
│   │   │    475 │           </p>
│   │   │    476 │           <p>
│   │   │    477 │             Ønsker du å registrere deg som privatperson?{" "}
│   │   │    478 │             <Link href="/register-user" className="text-blue-600 hover:underline">
│   │   │    479 │               Klikk her
│   │   │    480 │             </Link>
│   │   │    481 │           </p>
│   │   │    482 │         </div>
│   │   │    483 │       </div>
│   │   │    484 │     </div>
│   │   │    485 │   );
│   │   │    486 │ }
│   │   └── SLUTT PÅ FIL

│   │   📄 register-user.tsx
│   │   ├── FILINNHOLD (286 linjer):
│   │   │      1 │ // src/pages/register-user.tsx
│   │   │      2 │ import { useState } from "react";
│   │   │      3 │ import { useRouter } from "next/router";
│   │   │      4 │ import Link from "next/link";
│   │   │      5 │ import { createUserWithEmailAndPassword } from "firebase/auth";
│   │   │      6 │ import { doc, setDoc } from "firebase/firestore";
│   │   │      7 │ import { auth, db } from "@/lib/firebase";
│   │   │      8 │ import ImageUpload from "@/components/ImageUpload";
│   │   │      9 │ 
│   │   │     10 │ export default function RegisterUser() {
│   │   │     11 │   const router = useRouter();
│   │   │     12 │   const [formData, setFormData] = useState({
│   │   │     13 │     firstName: "",
│   │   │     14 │     lastName: "",
│   │   │     15 │     email: "",
│   │   │     16 │     phone: "",
│   │   │     17 │     password: "",
│   │   │     18 │     confirmPassword: "",
│   │   │     19 │     profession: "",
│   │   │     20 │     industry: "",
│   │   │     21 │     termsAccepted: false,
│   │   │     22 │     newsletter: false,
│   │   │     23 │     profileImage: "",
│   │   │     24 │     backgroundImage: "",
│   │   │     25 │   });
│   │   │     26 │ 
│   │   │     27 │   const [error, setError] = useState<string | null>(null);
│   │   │     28 │ 
│   │   │     29 │   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
│   │   │     30 │     const { name, value, type } = e.target;
│   │   │     31 │     if (type === "checkbox") {
│   │   │     32 │       setFormData({ ...formData, [name]: (e.target as HTMLInputElement).checked });
│   │   │     33 │     } else {
│   │   │     34 │       setFormData({ ...formData, [name]: value });
│   │   │     35 │     }
│   │   │     36 │   };
│   │   │     37 │ 
│   │   │     38 │   const handleSubmit = async (e: React.FormEvent) => {
│   │   │     39 │     e.preventDefault();
│   │   │     40 │     setError(null);
│   │   │     41 │ 
│   │   │     42 │     if (!formData.termsAccepted) {
│   │   │     43 │       setError("Du må godta vilkårene og personvernerklæringen.");
│   │   │     44 │       return;
│   │   │     45 │     }
│   │   │     46 │ 
│   │   │     47 │     if (formData.password !== formData.confirmPassword) {
│   │   │     48 │       setError("Passordene stemmer ikke overens.");
│   │   │     49 │       return;
│   │   │     50 │     }
│   │   │     51 │ 
│   │   │     52 │     try {
│   │   │     53 │       const userCredential = await createUserWithEmailAndPassword(auth, formData.email, formData.password);
│   │   │     54 │       const user = userCredential.user;
│   │   │     55 │ 
│   │   │     56 │       await setDoc(doc(db, "users", user.uid), {
│   │   │     57 │         firstName: formData.firstName,
│   │   │     58 │         lastName: formData.lastName,
│   │   │     59 │         email: formData.email,
│   │   │     60 │         phone: formData.phone,
│   │   │     61 │         profession: formData.profession,
│   │   │     62 │         industry: formData.industry,
│   │   │     63 │         newsletter: formData.newsletter,
│   │   │     64 │         createdAt: new Date().toISOString(),
│   │   │     65 │         profileImage: formData.profileImage || null,
│   │   │     66 │         backgroundImage: formData.backgroundImage || null,
│   │   │     67 │       });
│   │   │     68 │ 
│   │   │     69 │       router.push(`/profile/user/${user.uid}`);
│   │   │     70 │     } catch (err: any) {
│   │   │     71 │       setError(err.message);
│   │   │     72 │     }
│   │   │     73 │   };
│   │   │     74 │ 
│   │   │     75 │   return (
│   │   │     76 │     <div className="bg-gray-50 min-h-screen">
│   │   │     77 │       <nav className="bg-blue-600 p-4 flex justify-between items-center">
│   │   │     78 │         <Link href="/" className="flex items-center text-white font-bold text-xl hover:text-blue-100">
│   │   │     79 │           <img src="/logo.svg" alt="B2B Logo" className="w-8 h-8 mr-2" />
│   │   │     80 │           B2B Social
│   │   │     81 │         </Link>
│   │   │     82 │       </nav>
│   │   │     83 │ 
│   │   │     84 │       <div className="max-w-xl mx-auto mt-10 bg-white rounded-lg shadow-md p-8">
│   │   │     85 │         <h1 className="text-2xl font-bold text-center mb-8 text-black">Registrer deg som privatperson</h1>
│   │   │     86 │ 
│   │   │     87 │         {error && <p className="text-red-500 text-center mb-4">{error}</p>}
│   │   │     88 │ 
│   │   │     89 │         <form onSubmit={handleSubmit}>
│   │   │     90 │           <div className="flex gap-4 mb-4">
│   │   │     91 │             <div className="flex-1">
│   │   │     92 │               <label htmlFor="firstName" className="block text-sm font-medium text-black mb-2">
│   │   │     93 │                 Fornavn
│   │   │     94 │               </label>
│   │   │     95 │               <input
│   │   │     96 │                 type="text"
│   │   │     97 │                 id="firstName"
│   │   │     98 │                 name="firstName"
│   │   │     99 │                 value={formData.firstName}
│   │   │    100 │                 onChange={handleChange}
│   │   │    101 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    102 │                 required
│   │   │    103 │               />
│   │   │    104 │             </div>
│   │   │    105 │             <div className="flex-1">
│   │   │    106 │               <label htmlFor="lastName" className="block text-sm font-medium text-black mb-2">
│   │   │    107 │                 Etternavn
│   │   │    108 │               </label>
│   │   │    109 │               <input
│   │   │    110 │                 type="text"
│   │   │    111 │                 id="lastName"
│   │   │    112 │                 name="lastName"
│   │   │    113 │                 value={formData.lastName}
│   │   │    114 │                 onChange={handleChange}
│   │   │    115 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    116 │                 required
│   │   │    117 │               />
│   │   │    118 │             </div>
│   │   │    119 │           </div>
│   │   │    120 │ 
│   │   │    121 │           <div className="mb-4">
│   │   │    122 │             <label htmlFor="email" className="block text-sm font-medium text-black mb-2">
│   │   │    123 │               E-post
│   │   │    124 │             </label>
│   │   │    125 │             <input
│   │   │    126 │               type="email"
│   │   │    127 │               id="email"
│   │   │    128 │               name="email"
│   │   │    129 │               value={formData.email}
│   │   │    130 │               onChange={handleChange}
│   │   │    131 │               placeholder="din@epost.no"
│   │   │    132 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    133 │               required
│   │   │    134 │             />
│   │   │    135 │           </div>
│   │   │    136 │ 
│   │   │    137 │           <div className="mb-4">
│   │   │    138 │             <label htmlFor="phone" className="block text-sm font-medium text-black mb-2">
│   │   │    139 │               Telefonnummer
│   │   │    140 │             </label>
│   │   │    141 │             <input
│   │   │    142 │               type="tel"
│   │   │    143 │               id="phone"
│   │   │    144 │               name="phone"
│   │   │    145 │               value={formData.phone}
│   │   │    146 │               onChange={handleChange}
│   │   │    147 │               placeholder="12345678"
│   │   │    148 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    149 │             />
│   │   │    150 │           </div>
│   │   │    151 │ 
│   │   │    152 │           <div className="flex gap-4 mb-4">
│   │   │    153 │             <div className="flex-1">
│   │   │    154 │               <label htmlFor="password" className="block text-sm font-medium text-black mb-2">
│   │   │    155 │                 Passord
│   │   │    156 │               </label>
│   │   │    157 │               <input
│   │   │    158 │                 type="password"
│   │   │    159 │                 id="password"
│   │   │    160 │                 name="password"
│   │   │    161 │                 value={formData.password}
│   │   │    162 │                 onChange={handleChange}
│   │   │    163 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    164 │                 required
│   │   │    165 │               />
│   │   │    166 │               <p className="text-sm text-gray-600 mt-1">Minst 8 tegn med tall og bokstaver</p>
│   │   │    167 │             </div>
│   │   │    168 │             <div className="flex-1">
│   │   │    169 │               <label htmlFor="confirmPassword" className="block text-sm font-medium text-black mb-2">
│   │   │    170 │                 Bekreft passord
│   │   │    171 │               </label>
│   │   │    172 │               <input
│   │   │    173 │                 type="password"
│   │   │    174 │                 id="confirmPassword"
│   │   │    175 │                 name="confirmPassword"
│   │   │    176 │                 value={formData.confirmPassword}
│   │   │    177 │                 onChange={handleChange}
│   │   │    178 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    179 │                 required
│   │   │    180 │               />
│   │   │    181 │             </div>
│   │   │    182 │           </div>
│   │   │    183 │ 
│   │   │    184 │           <div className="mb-4">
│   │   │    185 │             <label htmlFor="profession" className="block text-sm font-medium text-black mb-2">
│   │   │    186 │               Yrke/Stilling
│   │   │    187 │             </label>
│   │   │    188 │             <input
│   │   │    189 │               type="text"
│   │   │    190 │               id="profession"
│   │   │    191 │               name="profession"
│   │   │    192 │               value={formData.profession}
│   │   │    193 │               onChange={handleChange}
│   │   │    194 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    195 │             />
│   │   │    196 │           </div>
│   │   │    197 │ 
│   │   │    198 │           <div className="mb-4">
│   │   │    199 │             <label htmlFor="industry" className="block text-sm font-medium text-black mb-2">
│   │   │    200 │               Bransje/Sektor
│   │   │    201 │             </label>
│   │   │    202 │             <select
│   │   │    203 │               id="industry"
│   │   │    204 │               name="industry"
│   │   │    205 │               value={formData.industry}
│   │   │    206 │               onChange={handleChange}
│   │   │    207 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │    208 │             >
│   │   │    209 │               <option value="">Velg bransje/sektor</option>
│   │   │    210 │               <option value="technology">Teknologi</option>
│   │   │    211 │               <option value="finance">Finans</option>
│   │   │    212 │               <option value="marketing">Markedsføring</option>
│   │   │    213 │               <option value="health">Helse</option>
│   │   │    214 │               <option value="other">Annet</option>
│   │   │    215 │             </select>
│   │   │    216 │           </div>
│   │   │    217 │ 
│   │   │    218 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │    219 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Profilbilde og bakgrunnsbilde</h2>
│   │   │    220 │ 
│   │   │    221 │             <ImageUpload
│   │   │    222 │               label="Last opp profilbilde"
│   │   │    223 │               onUpload={(url) => setFormData({ ...formData, profileImage: url })}
│   │   │    224 │               recommendedSize="200x200 px"
│   │   │    225 │               maxSizeMB={2}
│   │   │    226 │             />
│   │   │    227 │ 
│   │   │    228 │             <ImageUpload
│   │   │    229 │               label="Last opp bakgrunnsbilde (valgfritt)"
│   │   │    230 │               onUpload={(url) => setFormData({ ...formData, backgroundImage: url })}
│   │   │    231 │               recommendedSize="1200x400 px"
│   │   │    232 │               maxSizeMB={5}
│   │   │    233 │             />
│   │   │    234 │           </div>
│   │   │    235 │ 
│   │   │    236 │           <div className="mb-6">
│   │   │    237 │             <label className="flex items-center mb-2">
│   │   │    238 │               <input
│   │   │    239 │                 type="checkbox"
│   │   │    240 │                 name="termsAccepted"
│   │   │    241 │                 checked={formData.termsAccepted}
│   │   │    242 │                 onChange={handleChange}
│   │   │    243 │                 className="mr-2"
│   │   │    244 │                 required
│   │   │    245 │               />
│   │   │    246 │               <span className="text-black">
│   │   │    247 │                 Jeg godtar <Link href="#" className="text-blue-600 hover:underline">vilkårene for bruk</Link> og{" "}
│   │   │    248 │                 <Link href="#" className="text-blue-600 hover:underline">personvernerklæringen</Link>
│   │   │    249 │               </span>
│   │   │    250 │             </label>
│   │   │    251 │ 
│   │   │    252 │             <label className="flex items-center">
│   │   │    253 │               <input
│   │   │    254 │                 type="checkbox"
│   │   │    255 │                 name="newsletter"
│   │   │    256 │                 checked={formData.newsletter}
│   │   │    257 │                 onChange={handleChange}
│   │   │    258 │                 className="mr-2"
│   │   │    259 │               />
│   │   │    260 │               <span className="text-black">Jeg ønsker å motta nyhetsbrev om tilbud og oppdateringer</span>
│   │   │    261 │             </label>
│   │   │    262 │           </div>
│   │   │    263 │ 
│   │   │    264 │           <button type="submit" className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700">
│   │   │    265 │             Registrer deg
│   │   │    266 │           </button>
│   │   │    267 │         </form>
│   │   │    268 │ 
│   │   │    269 │         <div className="text-center mt-6 text-gray-600">
│   │   │    270 │           <p>
│   │   │    271 │             Har du allerede en konto?{" "}
│   │   │    272 │             <Link href="/login" className="text-blue-600 hover:underline">
│   │   │    273 │               Logg inn
│   │   │    274 │             </Link>
│   │   │    275 │           </p>
│   │   │    276 │           <p>
│   │   │    277 │             Ønsker du å registrere deg som bedrift?{" "}
│   │   │    278 │             <Link href="/register-business" className="text-blue-600 hover:underline">
│   │   │    279 │               Klikk her
│   │   │    280 │             </Link>
│   │   │    281 │           </p>
│   │   │    282 │         </div>
│   │   │    283 │       </div>
│   │   │    284 │     </div>
│   │   │    285 │   );
│   │   │    286 │ }
│   │   └── SLUTT PÅ FIL

│   │   📁 businesses/
│   │   │   📄 BrowseBusinesses.tsx
│   │   │   ├── FILINNHOLD (230 linjer):
│   │   │   │      1 │ // src/pages/businesses/index.tsx
│   │   │   │      2 │ import Link from "next/link";
│   │   │   │      3 │ import Layout from "@/components/layout/Layout";
│   │   │   │      4 │ import BusinessCard from "@/components/business/BusinessCard";
│   │   │   │      5 │ import { useState, useEffect } from "react";
│   │   │   │      6 │ 
│   │   │   │      7 │ export interface Business {
│   │   │   │      8 │   id: string;
│   │   │   │      9 │   name: string;
│   │   │   │     10 │   tags: string[];
│   │   │   │     11 │   description: string;
│   │   │   │     12 │ }
│   │   │   │     13 │ 
│   │   │   │     14 │ export async function getStaticProps() {
│   │   │   │     15 │   // Mock-data for nå; senere kan du hente fra Firestore ved build-tid
│   │   │   │     16 │   const mockBusinesses: Business[] = [
│   │   │   │     17 │     {
│   │   │   │     18 │       id: "fixitt-as",
│   │   │   │     19 │       name: "Fixitt AS",
│   │   │   │     20 │       tags: ["service", "webdesign"],
│   │   │   │     21 │       description: "We handle all your IT needs and make life easier for you.",
│   │   │   │     22 │     },
│   │   │   │     23 │     {
│   │   │   │     24 │       id: "bon-as",
│   │   │   │     25 │       name: "BON AS",
│   │   │   │     26 │       tags: ["beverage", "distributor"],
│   │   │   │     27 │       description: "We produce the world's best seltzer water without additives.",
│   │   │   │     28 │     },
│   │   │   │     29 │     {
│   │   │   │     30 │       id: "unknown",
│   │   │   │     31 │       name: "Unknown Business",
│   │   │   │     32 │       tags: ["Other"],
│   │   │   │     33 │       description: "No description available.",
│   │   │   │     34 │     },
│   │   │   │     35 │   ];
│   │   │   │     36 │ 
│   │   │   │     37 │   return {
│   │   │   │     38 │     props: {
│   │   │   │     39 │       initialBusinesses: mockBusinesses,
│   │   │   │     40 │     },
│   │   │   │     41 │     // Optional: Re-generer siden etter et visst intervall (f.eks. hver time)
│   │   │   │     42 │     revalidate: 3600, // 1 time i sekunder
│   │   │   │     43 │   };
│   │   │   │     44 │ }
│   │   │   │     45 │ 
│   │   │   │     46 │ interface BrowseBusinessesProps {
│   │   │   │     47 │   initialBusinesses: Business[];
│   │   │   │     48 │ }
│   │   │   │     49 │ 
│   │   │   │     50 │ export default function BrowseBusinesses({ initialBusinesses }: BrowseBusinessesProps) {
│   │   │   │     51 │   const [searchTerm, setSearchTerm] = useState("");
│   │   │   │     52 │   const [selectedCategories, setSelectedCategories] = useState<string[]>([]);
│   │   │   │     53 │   const [region, setRegion] = useState("All Regions");
│   │   │   │     54 │   const [country, setCountry] = useState("All Countries");
│   │   │   │     55 │   const [sortBy, setSortBy] = useState("Newest");
│   │   │   │     56 │   const [isMounted, setIsMounted] = useState(false);
│   │   │   │     57 │ 
│   │   │   │     58 │   const categories = ["Technology", "Finance", "Marketing", "Health", "Education"];
│   │   │   │     59 │   const filteredBusinesses = initialBusinesses; // Senere: Filtrer på klienten eller hent dynamisk
│   │   │   │     60 │ 
│   │   │   │     61 │   // Vent med å rendre dynamisk innhold til klienten er klar
│   │   │   │     62 │   useEffect(() => {
│   │   │   │     63 │     setIsMounted(true);
│   │   │   │     64 │   }, []);
│   │   │   │     65 │ 
│   │   │   │     66 │   // Hvis klienten ikke er klar ennå, vis kun statisk innhold
│   │   │   │     67 │   if (!isMounted) {
│   │   │   │     68 │     return (
│   │   │   │     69 │       <Layout>
│   │   │   │     70 │         <div className="flex flex-col md:flex-row">
│   │   │   │     71 │           <div className="md:w-1/4 bg-white rounded-lg shadow-md p-4 md:mr-6 mb-6 md:mb-0">
│   │   │   │     72 │             <h2 className="text-lg font-bold mb-4">Filter Businesses</h2>
│   │   │   │     73 │             {/* Statisk placeholder */}
│   │   │   │     74 │             <div className="mb-6">
│   │   │   │     75 │               <label className="block text-sm font-medium text-gray-700 mb-1">Search</label>
│   │   │   │     76 │               <input
│   │   │   │     77 │                 type="text"
│   │   │   │     78 │                 placeholder="Search businesses..."
│   │   │   │     79 │                 className="w-full px-3 py-2 border border-gray-300 rounded-md"
│   │   │   │     80 │                 disabled
│   │   │   │     81 │               />
│   │   │   │     82 │             </div>
│   │   │   │     83 │           </div>
│   │   │   │     84 │           <div className="md:w-3/4">
│   │   │   │     85 │             <h1 className="text-2xl font-bold mb-6">Browse Businesses</h1>
│   │   │   │     86 │             <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
│   │   │   │     87 │               {initialBusinesses.map((business) => (
│   │   │   │     88 │                 <Link key={business.id} href={`/businesses/${business.id}`}>
│   │   │   │     89 │                   <BusinessCard {...business} />
│   │   │   │     90 │                 </Link>
│   │   │   │     91 │               ))}
│   │   │   │     92 │             </div>
│   │   │   │     93 │           </div>
│   │   │   │     94 │         </div>
│   │   │   │     95 │       </Layout>
│   │   │   │     96 │     );
│   │   │   │     97 │   }
│   │   │   │     98 │ 
│   │   │   │     99 │   return (
│   │   │   │    100 │     <Layout>
│   │   │   │    101 │       <div className="flex flex-col md:flex-row">
│   │   │   │    102 │         {/* Sidebar Filters */}
│   │   │   │    103 │         <div className="md:w-1/4 bg-white rounded-lg shadow-md p-4 md:mr-6 mb-6 md:mb-0">
│   │   │   │    104 │           <h2 className="text-lg font-bold mb-4">Filter Businesses</h2>
│   │   │   │    105 │ 
│   │   │   │    106 │           {/* Search */}
│   │   │   │    107 │           <div className="mb-6">
│   │   │   │    108 │             <label className="block text-sm font-medium text-gray-700 mb-1">Search</label>
│   │   │   │    109 │             <input
│   │   │   │    110 │               type="text"
│   │   │   │    111 │               placeholder="Search businesses..."
│   │   │   │    112 │               className="w-full px-3 py-2 border border-gray-300 rounded-md"
│   │   │   │    113 │               value={searchTerm}
│   │   │   │    114 │               onChange={(e) => setSearchTerm(e.target.value)}
│   │   │   │    115 │             />
│   │   │   │    116 │           </div>
│   │   │   │    117 │ 
│   │   │   │    118 │           {/* Categories */}
│   │   │   │    119 │           <div className="mb-6">
│   │   │   │    120 │             <h3 className="font-medium mb-2">Categories</h3>
│   │   │   │    121 │             <div className="space-y-2">
│   │   │   │    122 │               {categories.map((category) => (
│   │   │   │    123 │                 <label key={category} className="flex items-center">
│   │   │   │    124 │                   <input
│   │   │   │    125 │                     type="checkbox"
│   │   │   │    126 │                     className="mr-2"
│   │   │   │    127 │                     checked={selectedCategories.includes(category)}
│   │   │   │    128 │                     onChange={() =>
│   │   │   │    129 │                       setSelectedCategories((prev) =>
│   │   │   │    130 │                         prev.includes(category)
│   │   │   │    131 │                           ? prev.filter((c) => c !== category)
│   │   │   │    132 │                           : [...prev, category]
│   │   │   │    133 │                       )
│   │   │   │    134 │                     }
│   │   │   │    135 │                   />
│   │   │   │    136 │                   <span>{category}</span>
│   │   │   │    137 │                 </label>
│   │   │   │    138 │               ))}
│   │   │   │    139 │             </div>
│   │   │   │    140 │           </div>
│   │   │   │    141 │ 
│   │   │   │    142 │           {/* Region */}
│   │   │   │    143 │           <div className="mb-6">
│   │   │   │    144 │             <label className="block text-sm font-medium text-gray-700 mb-1">Region</label>
│   │   │   │    145 │             <select
│   │   │   │    146 │               className="w-full px-3 py-2 border border-gray-300 rounded-md"
│   │   │   │    147 │               value={region}
│   │   │   │    148 │               onChange={(e) => setRegion(e.target.value)}
│   │   │   │    149 │             >
│   │   │   │    150 │               <option>All Regions</option>
│   │   │   │    151 │               <option>Oslo</option>
│   │   │   │    152 │               <option>Bergen</option>
│   │   │   │    153 │               <option>Trondheim</option>
│   │   │   │    154 │               <option>Stavanger</option>
│   │   │   │    155 │             </select>
│   │   │   │    156 │           </div>
│   │   │   │    157 │ 
│   │   │   │    158 │           {/* Country */}
│   │   │   │    159 │           <div className="mb-6">
│   │   │   │    160 │             <label className="block text-sm font-medium text-gray-700 mb-1">Country</label>
│   │   │   │    161 │             <select
│   │   │   │    162 │               className="w-full px-3 py-2 border border-gray-300 rounded-md"
│   │   │   │    163 │               value={country}
│   │   │   │    164 │               onChange={(e) => setCountry(e.target.value)}
│   │   │   │    165 │             >
│   │   │   │    166 │               <option>All Countries</option>
│   │   │   │    167 │               <option>Norway</option>
│   │   │   │    168 │               <option>Sweden</option>
│   │   │   │    169 │               <option>Denmark</option>
│   │   │   │    170 │               <option>Finland</option>
│   │   │   │    171 │             </select>
│   │   │   │    172 │           </div>
│   │   │   │    173 │ 
│   │   │   │    174 │           <button className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors">
│   │   │   │    175 │             Apply Filters
│   │   │   │    176 │           </button>
│   │   │   │    177 │         </div>
│   │   │   │    178 │ 
│   │   │   │    179 │         {/* Business List */}
│   │   │   │    180 │         <div className="md:w-3/4">
│   │   │   │    181 │           <div className="flex justify-between items-center mb-6">
│   │   │   │    182 │             <h1 className="text-2xl font-bold">Browse Businesses</h1>
│   │   │   │    183 │             <div className="flex items-center">
│   │   │   │    184 │               <span className="mr-2">Sort by:</span>
│   │   │   │    185 │               <select
│   │   │   │    186 │                 className="border border-gray-300 rounded-md px-2 py-1"
│   │   │   │    187 │                 value={sortBy}
│   │   │   │    188 │                 onChange={(e) => setSortBy(e.target.value)}
│   │   │   │    189 │               >
│   │   │   │    190 │                 <option>Newest</option>
│   │   │   │    191 │                 <option>Alphabetical</option>
│   │   │   │    192 │                 <option>Most Popular</option>
│   │   │   │    193 │               </select>
│   │   │   │    194 │             </div>
│   │   │   │    195 │           </div>
│   │   │   │    196 │ 
│   │   │   │    197 │           {/* Business Grid */}
│   │   │   │    198 │           <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
│   │   │   │    199 │             {filteredBusinesses.map((business) => (
│   │   │   │    200 │               <Link key={business.id} href={`/businesses/${business.id}`}>
│   │   │   │    201 │                 <BusinessCard {...business} />
│   │   │   │    202 │               </Link>
│   │   │   │    203 │             ))}
│   │   │   │    204 │           </div>
│   │   │   │    205 │ 
│   │   │   │    206 │           {/* Pagination */}
│   │   │   │    207 │           <div className="flex justify-center mt-8">
│   │   │   │    208 │             <nav className="inline-flex rounded-md shadow">
│   │   │   │    209 │               <a href="#" className="px-4 py-2 bg-white border border-gray-300 rounded-l-md hover:bg-gray-50">
│   │   │   │    210 │                 Previous
│   │   │   │    211 │               </a>
│   │   │   │    212 │               <a href="#" className="px-4 py-2 bg-white border-t border-b border-gray-300 text-blue-600 font-medium">
│   │   │   │    213 │                 1
│   │   │   │    214 │               </a>
│   │   │   │    215 │               <a href="#" className="px-4 py-2 bg-white border-t border-b border-gray-300 hover:bg-gray-50">
│   │   │   │    216 │                 2
│   │   │   │    217 │               </a>
│   │   │   │    218 │               <a href="#" className="px-4 py-2 bg-white border-t border-b border-gray-300 hover:bg-gray-50">
│   │   │   │    219 │                 3
│   │   │   │    220 │               </a>
│   │   │   │    221 │               <a href="#" className="px-4 py-2 bg-white border border-gray-300 rounded-r-md hover:bg-gray-50">
│   │   │   │    222 │                 Next
│   │   │   │    223 │               </a>
│   │   │   │    224 │             </nav>
│   │   │   │    225 │           </div>
│   │   │   │    226 │         </div>
│   │   │   │    227 │       </div>
│   │   │   │    228 │     </Layout>
│   │   │   │    229 │   );
│   │   │   │    230 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 [id].tsx
│   │   │   ├── FILINNHOLD (51 linjer):
│   │   │   │      1 │ import { useRouter } from "next/router";
│   │   │   │      2 │ import Layout from "@/components/layout/Layout";
│   │   │   │      3 │ import BusinessProfile from "@/components/business/BusinessProfile";
│   │   │   │      4 │ 
│   │   │   │      5 │ interface Business {
│   │   │   │      6 │   name: string;
│   │   │   │      7 │   categories: string[];
│   │   │   │      8 │   email: string;
│   │   │   │      9 │   phone: string;
│   │   │   │     10 │   address: string;
│   │   │   │     11 │   description: string;
│   │   │   │     12 │   website: string;
│   │   │   │     13 │   contactPerson: string;
│   │   │   │     14 │   orgNumber: string;
│   │   │   │     15 │ }
│   │   │   │     16 │ 
│   │   │   │     17 │ const mockBusinesses: Record<string, Business> = {
│   │   │   │     18 │   "bon-as": {
│   │   │   │     19 │     name: "BON AS",
│   │   │   │     20 │     categories: ["Drikkevarer", "Distributør", "Produsent"],
│   │   │   │     21 │     email: "christopher@nielsenit.no",
│   │   │   │     22 │     phone: "95863224",
│   │   │   │     23 │     address: "Lensmannslia 4",
│   │   │   │     24 │     description: "We produce the world's best seltzer water without additives. Best in tests across the world.",
│   │   │   │     25 │     website: "https://www.strijana.com",
│   │   │   │     26 │     contactPerson: "Christopher Meltveit Nielsen",
│   │   │   │     27 │     orgNumber: "929783018",
│   │   │   │     28 │   },
│   │   │   │     29 │ };
│   │   │   │     30 │ 
│   │   │   │     31 │ export default function BusinessPage() {
│   │   │   │     32 │   const router = useRouter();
│   │   │   │     33 │   const { id } = router.query;
│   │   │   │     34 │ 
│   │   │   │     35 │   // Find the business based on ID, otherwise show an error message
│   │   │   │     36 │   const business = id ? mockBusinesses[id as string] : undefined;
│   │   │   │     37 │ 
│   │   │   │     38 │   if (!business) {
│   │   │   │     39 │     return (
│   │   │   │     40 │       <Layout>
│   │   │   │     41 │         <div className="text-center text-red-500">Business not found</div>
│   │   │   │     42 │       </Layout>
│   │   │   │     43 │     );
│   │   │   │     44 │   }
│   │   │   │     45 │ 
│   │   │   │     46 │   return (
│   │   │   │     47 │     <Layout>
│   │   │   │     48 │       <BusinessProfile {...business} />
│   │   │   │     49 │     </Layout>
│   │   │   │     50 │   );
│   │   │   │     51 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   📁 edit-profile/
│   │   │   📄 business.tsx
│   │   │   ├── FILINNHOLD (492 linjer):
│   │   │   │      1 │ // src/pages/edit-profile/business.tsx
│   │   │   │      2 │ import { useState, useEffect } from "react";
│   │   │   │      3 │ import { useRouter } from "next/router";
│   │   │   │      4 │ import { doc, getDoc, updateDoc } from "firebase/firestore";
│   │   │   │      5 │ import { updateEmail } from "firebase/auth";
│   │   │   │      6 │ import { db, auth } from "@/lib/firebase";
│   │   │   │      7 │ import { useAuth } from "@/context/AuthContext";
│   │   │   │      8 │ import ImageUpload from "@/components/ImageUpload";
│   │   │   │      9 │ import Link from "next/link";
│   │   │   │     10 │ 
│   │   │   │     11 │ export default function EditBusinessProfile() {
│   │   │   │     12 │   const { user, userData } = useAuth();
│   │   │   │     13 │   const router = useRouter();
│   │   │   │     14 │   const [formData, setFormData] = useState<any>(null);
│   │   │   │     15 │   const [error, setError] = useState<string | null>(null);
│   │   │   │     16 │   const [loading, setLoading] = useState(true);
│   │   │   │     17 │   const [emailError, setEmailError] = useState<string | null>(null);
│   │   │   │     18 │   const [phoneError, setPhoneError] = useState<string | null>(null);
│   │   │   │     19 │ 
│   │   │   │     20 │   useEffect(() => {
│   │   │   │     21 │     const fetchBusiness = async () => {
│   │   │   │     22 │       if (!user || !userData) return;
│   │   │   │     23 │ 
│   │   │   │     24 │       try {
│   │   │   │     25 │         const businessDoc = await getDoc(doc(db, "businesses", (userData as any).orgNumber));
│   │   │   │     26 │         if (businessDoc.exists()) {
│   │   │   │     27 │           setFormData(businessDoc.data());
│   │   │   │     28 │         } else {
│   │   │   │     29 │           setError("Bedriften ble ikke funnet.");
│   │   │   │     30 │         }
│   │   │   │     31 │       } catch (err: any) {
│   │   │   │     32 │         setError(err.message);
│   │   │   │     33 │       } finally {
│   │   │   │     34 │         setLoading(false);
│   │   │   │     35 │       }
│   │   │   │     36 │     };
│   │   │   │     37 │ 
│   │   │   │     38 │     fetchBusiness();
│   │   │   │     39 │   }, [user, userData]);
│   │   │   │     40 │ 
│   │   │   │     41 │   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
│   │   │   │     42 │     const { name, value } = e.target;
│   │   │   │     43 │     setFormData({ ...formData, [name]: value });
│   │   │   │     44 │ 
│   │   │   │     45 │     // Valider e-post og telefonnummer
│   │   │   │     46 │     if (name === "businessEmail") {
│   │   │   │     47 │       const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
│   │   │   │     48 │       setEmailError(emailRegex.test(value) ? null : "Ugyldig e-postadresse.");
│   │   │   │     49 │     }
│   │   │   │     50 │     if (name === "businessPhone") {
│   │   │   │     51 │       const phoneRegex = /^\d{8}$/;
│   │   │   │     52 │       setPhoneError(phoneRegex.test(value) ? null : "Telefonnummeret må være 8 siffer.");
│   │   │   │     53 │     }
│   │   │   │     54 │   };
│   │   │   │     55 │ 
│   │   │   │     56 │   const handleContactChange = (e: React.ChangeEvent<HTMLInputElement>) => {
│   │   │   │     57 │     const { name, value } = e.target;
│   │   │   │     58 │     setFormData({
│   │   │   │     59 │       ...formData,
│   │   │   │     60 │       contact: { ...formData.contact, [name]: value },
│   │   │   │     61 │     });
│   │   │   │     62 │ 
│   │   │   │     63 │     // Valider kontaktpersonens e-post og telefonnummer
│   │   │   │     64 │     if (name === "email") {
│   │   │   │     65 │       const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
│   │   │   │     66 │       setEmailError(emailRegex.test(value) ? null : "Ugyldig e-postadresse for kontaktperson.");
│   │   │   │     67 │     }
│   │   │   │     68 │     if (name === "phone") {
│   │   │   │     69 │       const phoneRegex = /^\d{8}$/;
│   │   │   │     70 │       setPhoneError(phoneRegex.test(value) ? null : "Telefonnummeret må være 8 siffer.");
│   │   │   │     71 │     }
│   │   │   │     72 │   };
│   │   │   │     73 │ 
│   │   │   │     74 │   const handleTagToggle = (tag: string) => {
│   │   │   │     75 │     setFormData((prev: any) => ({
│   │   │   │     76 │       ...prev,
│   │   │   │     77 │       tags: prev.tags.includes(tag) ? prev.tags.filter((t: string) => t !== tag) : [...prev.tags, tag],
│   │   │   │     78 │     }));
│   │   │   │     79 │   };
│   │   │   │     80 │ 
│   │   │   │     81 │   const handleGalleryUpload = (url: string) => {
│   │   │   │     82 │     setFormData((prev: any) => ({
│   │   │   │     83 │       ...prev,
│   │   │   │     84 │       galleryImages: [...(prev.galleryImages || []), url],
│   │   │   │     85 │     }));
│   │   │   │     86 │   };
│   │   │   │     87 │ 
│   │   │   │     88 │   const handleDeleteGalleryImage = (index: number) => {
│   │   │   │     89 │     setFormData((prev: any) => ({
│   │   │   │     90 │       ...prev,
│   │   │   │     91 │       galleryImages: prev.galleryImages.filter((_: string, i: number) => i !== index),
│   │   │   │     92 │     }));
│   │   │   │     93 │   };
│   │   │   │     94 │ 
│   │   │   │     95 │   const handleSubmit = async (e: React.FormEvent) => {
│   │   │   │     96 │     e.preventDefault();
│   │   │   │     97 │     setError(null);
│   │   │   │     98 │ 
│   │   │   │     99 │     // Sjekk for valideringsfeil
│   │   │   │    100 │     if (emailError || phoneError) {
│   │   │   │    101 │       setError("Vennligst fiks valideringsfeilene før du lagrer.");
│   │   │   │    102 │       return;
│   │   │   │    103 │     }
│   │   │   │    104 │ 
│   │   │   │    105 │     try {
│   │   │   │    106 │       // Oppdater e-post i Firebase Authentication hvis kontaktpersonens e-post har endret seg
│   │   │   │    107 │       if (formData.contact.email !== user?.email) {
│   │   │   │    108 │         await updateEmail(user!, formData.contact.email);
│   │   │   │    109 │       }
│   │   │   │    110 │ 
│   │   │   │    111 │       // Oppdater bedriftsdata i Firestore
│   │   │   │    112 │       await updateDoc(doc(db, "businesses", formData.orgNumber), {
│   │   │   │    113 │         ...formData,
│   │   │   │    114 │         updatedAt: new Date().toISOString(),
│   │   │   │    115 │       });
│   │   │   │    116 │ 
│   │   │   │    117 │       router.push(`/profile/business/${formData.orgNumber}`);
│   │   │   │    118 │     } catch (err: any) {
│   │   │   │    119 │       setError(err.message);
│   │   │   │    120 │     }
│   │   │   │    121 │   };
│   │   │   │    122 │ 
│   │   │   │    123 │   if (loading) return <p>Laster...</p>;
│   │   │   │    124 │   if (error) return <p className="text-red-500">{error}</p>;
│   │   │   │    125 │   if (!formData) return <p>Ingen data tilgjengelig.</p>;
│   │   │   │    126 │ 
│   │   │   │    127 │   return (
│   │   │   │    128 │     <div className="bg-gray-50 min-h-screen">
│   │   │   │    129 │       <nav className="bg-blue-600 p-4 flex justify-between items-center">
│   │   │   │    130 │         <Link href="/" className="flex items-center text-white font-bold text-xl hover:text-blue-100">
│   │   │   │    131 │           <img src="/logo.svg" alt="B2B Logo" className="w-8 h-8 mr-2" />
│   │   │   │    132 │           B2B Social
│   │   │   │    133 │         </Link>
│   │   │   │    134 │       </nav>
│   │   │   │    135 │ 
│   │   │   │    136 │       <div className="max-w-3xl mx-auto mt-10 bg-white rounded-lg shadow-md p-8">
│   │   │   │    137 │         <h1 className="text-2xl font-bold text-center mb-8 text-black">Rediger bedriftsprofil</h1>
│   │   │   │    138 │ 
│   │   │   │    139 │         {error && <p className="text-red-500 text-center mb-4">{error}</p>}
│   │   │   │    140 │ 
│   │   │   │    141 │         <form onSubmit={handleSubmit}>
│   │   │   │    142 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │   │    143 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Bedriftsinformasjon</h2>
│   │   │   │    144 │ 
│   │   │   │    145 │             <div className="mb-4">
│   │   │   │    146 │               <label htmlFor="companyName" className="block text-sm font-medium text-black mb-2">
│   │   │   │    147 │                 Bedriftsnavn
│   │   │   │    148 │               </label>
│   │   │   │    149 │               <input
│   │   │   │    150 │                 type="text"
│   │   │   │    151 │                 id="companyName"
│   │   │   │    152 │                 name="companyName"
│   │   │   │    153 │                 value={formData.companyName}
│   │   │   │    154 │                 onChange={handleChange}
│   │   │   │    155 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    156 │                 required
│   │   │   │    157 │               />
│   │   │   │    158 │             </div>
│   │   │   │    159 │ 
│   │   │   │    160 │             <div className="flex gap-4 mb-4">
│   │   │   │    161 │               <div className="flex-1">
│   │   │   │    162 │                 <label htmlFor="orgNumber" className="block text-sm font-medium text-black mb-2">
│   │   │   │    163 │                   Organisasjonsnummer
│   │   │   │    164 │                 </label>
│   │   │   │    165 │                 <input
│   │   │   │    166 │                   type="text"
│   │   │   │    167 │                   id="orgNumber"
│   │   │   │    168 │                   name="orgNumber"
│   │   │   │    169 │                   value={formData.orgNumber}
│   │   │   │    170 │                   onChange={handleChange}
│   │   │   │    171 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    172 │                   disabled
│   │   │   │    173 │                 />
│   │   │   │    174 │               </div>
│   │   │   │    175 │               <div className="flex-1">
│   │   │   │    176 │                 <label htmlFor="companyType" className="block text-sm font-medium text-black mb-2">
│   │   │   │    177 │                   Selskapsform
│   │   │   │    178 │                 </label>
│   │   │   │    179 │                 <select
│   │   │   │    180 │                   id="companyType"
│   │   │   │    181 │                   name="companyType"
│   │   │   │    182 │                   value={formData.companyType}
│   │   │   │    183 │                   onChange={handleChange}
│   │   │   │    184 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    185 │                   required
│   │   │   │    186 │                 >
│   │   │   │    187 │                   <option value="">Velg selskapsform</option>
│   │   │   │    188 │                   <option value="as">Aksjeselskap (AS)</option>
│   │   │   │    189 │                   <option value="enkeltpersonforetak">Enkeltpersonforetak</option>
│   │   │   │    190 │                   <option value="ans">Ansvarlig selskap (ANS)</option>
│   │   │   │    191 │                   <option value="other">Annet</option>
│   │   │   │    192 │                 </select>
│   │   │   │    193 │               </div>
│   │   │   │    194 │             </div>
│   │   │   │    195 │ 
│   │   │   │    196 │             <div className="mb-4">
│   │   │   │    197 │               <label htmlFor="description" className="block text-sm font-medium text-black mb-2">
│   │   │   │    198 │                 Kort beskrivelse av bedriften
│   │   │   │    199 │               </label>
│   │   │   │    200 │               <textarea
│   │   │   │    201 │                 id="description"
│   │   │   │    202 │                 name="description"
│   │   │   │    203 │                 value={formData.description}
│   │   │   │    204 │                 onChange={handleChange}
│   │   │   │    205 │                 placeholder="Fortell litt om hva bedriften din gjør..."
│   │   │   │    206 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black min-h-[100px]"
│   │   │   │    207 │               />
│   │   │   │    208 │             </div>
│   │   │   │    209 │ 
│   │   │   │    210 │             <div className="mb-4">
│   │   │   │    211 │               <label htmlFor="category" className="block text-sm font-medium text-black mb-2">
│   │   │   │    212 │                 Hovedkategori
│   │   │   │    213 │               </label>
│   │   │   │    214 │               <select
│   │   │   │    215 │                 id="category"
│   │   │   │    216 │                 name="category"
│   │   │   │    217 │                 value={formData.category}
│   │   │   │    218 │                 onChange={handleChange}
│   │   │   │    219 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    220 │                 required
│   │   │   │    221 │               >
│   │   │   │    222 │                 <option value="">Velg kategori</option>
│   │   │   │    223 │                 <option value="technology">Teknologi</option>
│   │   │   │    224 │                 <option value="finance">Finans</option>
│   │   │   │    225 │                 <option value="marketing">Markedsføring</option>
│   │   │   │    226 │                 <option value="health">Helse</option>
│   │   │   │    227 │                 <option value="other">Annet</option>
│   │   │   │    228 │               </select>
│   │   │   │    229 │             </div>
│   │   │   │    230 │ 
│   │   │   │    231 │             <div className="mb-4">
│   │   │   │    232 │               <label className="block text-sm font-medium text-black mb-2">
│   │   │   │    233 │                 Tagger (velg alle som passer)
│   │   │   │    234 │               </label>
│   │   │   │    235 │               <div className="flex flex-wrap gap-2">
│   │   │   │    236 │                 {["service", "webdesign", "produsent", "distributør", "leverandør", "grossist", "konsulent", "teknologi"].map((tag) => (
│   │   │   │    237 │                   <div
│   │   │   │    238 │                     key={tag}
│   │   │   │    239 │                     onClick={() => handleTagToggle(tag)}
│   │   │   │    240 │                     className={`px-4 py-2 rounded-full cursor-pointer ${
│   │   │   │    241 │                       formData.tags.includes(tag) ? "bg-blue-600 text-white" : "bg-gray-200 text-black"
│   │   │   │    242 │                     }`}
│   │   │   │    243 │                   >
│   │   │   │    244 │                     {tag}
│   │   │   │    245 │                   </div>
│   │   │   │    246 │                 ))}
│   │   │   │    247 │               </div>
│   │   │   │    248 │             </div>
│   │   │   │    249 │           </div>
│   │   │   │    250 │ 
│   │   │   │    251 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │   │    252 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Kontaktinformasjon</h2>
│   │   │   │    253 │ 
│   │   │   │    254 │             <div className="mb-4">
│   │   │   │    255 │               <label htmlFor="businessEmail" className="block text-sm font-medium text-black mb-2">
│   │   │   │    256 │                 Bedriftens e-post
│   │   │   │    257 │               </label>
│   │   │   │    258 │               <input
│   │   │   │    259 │                 type="email"
│   │   │   │    260 │                 id="businessEmail"
│   │   │   │    261 │                 name="businessEmail"
│   │   │   │    262 │                 value={formData.businessEmail}
│   │   │   │    263 │                 onChange={handleChange}
│   │   │   │    264 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    265 │                 required
│   │   │   │    266 │               />
│   │   │   │    267 │               {emailError && formData.businessEmail === formData.businessEmail && (
│   │   │   │    268 │                 <p className="text-red-500 text-sm mt-1">{emailError}</p>
│   │   │   │    269 │               )}
│   │   │   │    270 │             </div>
│   │   │   │    271 │ 
│   │   │   │    272 │             <div className="mb-4">
│   │   │   │    273 │               <label htmlFor="businessPhone" className="block text-sm font-medium text-black mb-2">
│   │   │   │    274 │                 Telefonnummer
│   │   │   │    275 │               </label>
│   │   │   │    276 │               <input
│   │   │   │    277 │                 type="tel"
│   │   │   │    278 │                 id="businessPhone"
│   │   │   │    279 │                 name="businessPhone"
│   │   │   │    280 │                 value={formData.businessPhone}
│   │   │   │    281 │                 onChange={handleChange}
│   │   │   │    282 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    283 │                 required
│   │   │   │    284 │               />
│   │   │   │    285 │               {phoneError && formData.businessPhone === formData.businessPhone && (
│   │   │   │    286 │                 <p className="text-red-500 text-sm mt-1">{phoneError}</p>
│   │   │   │    287 │               )}
│   │   │   │    288 │             </div>
│   │   │   │    289 │ 
│   │   │   │    290 │             <div className="mb-4">
│   │   │   │    291 │               <label htmlFor="website" className="block text-sm font-medium text-black mb-2">
│   │   │   │    292 │                 Nettside
│   │   │   │    293 │               </label>
│   │   │   │    294 │               <input
│   │   │   │    295 │                 type="url"
│   │   │   │    296 │                 id="website"
│   │   │   │    297 │                 name="website"
│   │   │   │    298 │                 value={formData.website}
│   │   │   │    299 │                 onChange={handleChange}
│   │   │   │    300 │                 placeholder="https://www.dinenettside.no"
│   │   │   │    301 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    302 │               />
│   │   │   │    303 │             </div>
│   │   │   │    304 │ 
│   │   │   │    305 │             <div className="mb-4">
│   │   │   │    306 │               <label htmlFor="address" className="block text-sm font-medium text-black mb-2">
│   │   │   │    307 │                 Adresse
│   │   │   │    308 │               </label>
│   │   │   │    309 │               <input
│   │   │   │    310 │                 type="text"
│   │   │   │    311 │                 id="address"
│   │   │   │    312 │                 name="address"
│   │   │   │    313 │                 value={formData.address}
│   │   │   │    314 │                 onChange={handleChange}
│   │   │   │    315 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    316 │                 required
│   │   │   │    317 │               />
│   │   │   │    318 │             </div>
│   │   │   │    319 │ 
│   │   │   │    320 │             <div className="flex gap-4 mb-4">
│   │   │   │    321 │               <div className="flex-1">
│   │   │   │    322 │                 <label htmlFor="postalCode" className="block text-sm font-medium text-black mb-2">
│   │   │   │    323 │                   Postnummer
│   │   │   │    324 │                 </label>
│   │   │   │    325 │                 <input
│   │   │   │    326 │                   type="text"
│   │   │   │    327 │                   id="postalCode"
│   │   │   │    328 │                   name="postalCode"
│   │   │   │    329 │                   value={formData.postalCode}
│   │   │   │    330 │                   onChange={handleChange}
│   │   │   │    331 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    332 │                   required
│   │   │   │    333 │                 />
│   │   │   │    334 │               </div>
│   │   │   │    335 │               <div className="flex-1">
│   │   │   │    336 │                 <label htmlFor="city" className="block text-sm font-medium text-black mb-2">
│   │   │   │    337 │                   Poststed
│   │   │   │    338 │                 </label>
│   │   │   │    339 │                 <input
│   │   │   │    340 │                   type="text"
│   │   │   │    341 │                   id="city"
│   │   │   │    342 │                   name="city"
│   │   │   │    343 │                   value={formData.city}
│   │   │   │    344 │                   onChange={handleChange}
│   │   │   │    345 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    346 │                   required
│   │   │   │    347 │                 />
│   │   │   │    348 │               </div>
│   │   │   │    349 │             </div>
│   │   │   │    350 │           </div>
│   │   │   │    351 │ 
│   │   │   │    352 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │   │    353 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Kontaktperson</h2>
│   │   │   │    354 │ 
│   │   │   │    355 │             <div className="flex gap-4 mb-4">
│   │   │   │    356 │               <div className="flex-1">
│   │   │   │    357 │                 <label htmlFor="firstName" className="block text-sm font-medium text-black mb-2">
│   │   │   │    358 │                   Fornavn
│   │   │   │    359 │                 </label>
│   │   │   │    360 │                 <input
│   │   │   │    361 │                   type="text"
│   │   │   │    362 │                   id="firstName"
│   │   │   │    363 │                   name="firstName"
│   │   │   │    364 │                   value={formData.contact.firstName}
│   │   │   │    365 │                   onChange={handleContactChange}
│   │   │   │    366 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    367 │                   required
│   │   │   │    368 │                 />
│   │   │   │    369 │               </div>
│   │   │   │    370 │               <div className="flex-1">
│   │   │   │    371 │                 <label htmlFor="lastName" className="block text-sm font-medium text-black mb-2">
│   │   │   │    372 │                   Etternavn
│   │   │   │    373 │                 </label>
│   │   │   │    374 │                 <input
│   │   │   │    375 │                   type="text"
│   │   │   │    376 │                   id="lastName"
│   │   │   │    377 │                   name="lastName"
│   │   │   │    378 │                   value={formData.contact.lastName}
│   │   │   │    379 │                   onChange={handleContactChange}
│   │   │   │    380 │                   className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    381 │                   required
│   │   │   │    382 │                 />
│   │   │   │    383 │               </div>
│   │   │   │    384 │             </div>
│   │   │   │    385 │ 
│   │   │   │    386 │             <div className="mb-4">
│   │   │   │    387 │               <label htmlFor="email" className="block text-sm font-medium text-black mb-2">
│   │   │   │    388 │                 E-post
│   │   │   │    389 │               </label>
│   │   │   │    390 │               <input
│   │   │   │    391 │                 type="email"
│   │   │   │    392 │                 id="email"
│   │   │   │    393 │                 name="email"
│   │   │   │    394 │                 value={formData.contact.email}
│   │   │   │    395 │                 onChange={handleContactChange}
│   │   │   │    396 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    397 │                 required
│   │   │   │    398 │               />
│   │   │   │    399 │               {emailError && formData.contact.email === formData.contact.email && (
│   │   │   │    400 │                 <p className="text-red-500 text-sm mt-1">{emailError}</p>
│   │   │   │    401 │               )}
│   │   │   │    402 │             </div>
│   │   │   │    403 │ 
│   │   │   │    404 │             <div className="mb-4">
│   │   │   │    405 │               <label htmlFor="phone" className="block text-sm font-medium text-black mb-2">
│   │   │   │    406 │                 Telefonnummer
│   │   │   │    407 │               </label>
│   │   │   │    408 │               <input
│   │   │   │    409 │                 type="tel"
│   │   │   │    410 │                 id="phone"
│   │   │   │    411 │                 name="phone"
│   │   │   │    412 │                 value={formData.contact.phone}
│   │   │   │    413 │                 onChange={handleContactChange}
│   │   │   │    414 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    415 │               />
│   │   │   │    416 │               {phoneError && formData.contact.phone === formData.contact.phone && (
│   │   │   │    417 │                 <p className="text-red-500 text-sm mt-1">{phoneError}</p>
│   │   │   │    418 │               )}
│   │   │   │    419 │             </div>
│   │   │   │    420 │ 
│   │   │   │    421 │             <div className="mb-4">
│   │   │   │    422 │               <label htmlFor="position" className="block text-sm font-medium text-black mb-2">
│   │   │   │    423 │                 Stilling
│   │   │   │    424 │               </label>
│   │   │   │    425 │               <input
│   │   │   │    426 │                 type="text"
│   │   │   │    427 │                 id="position"
│   │   │   │    428 │                 name="position"
│   │   │   │    429 │                 value={formData.contact.position}
│   │   │   │    430 │                 onChange={handleContactChange}
│   │   │   │    431 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    432 │                 required
│   │   │   │    433 │               />
│   │   │   │    434 │             </div>
│   │   │   │    435 │           </div>
│   │   │   │    436 │ 
│   │   │   │    437 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │   │    438 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Profilbilde og bakgrunnsbilde</h2>
│   │   │   │    439 │ 
│   │   │   │    440 │             <ImageUpload
│   │   │   │    441 │               label="Last opp bedriftslogo"
│   │   │   │    442 │               onUpload={(url) => setFormData({ ...formData, profileImage: url })}
│   │   │   │    443 │               recommendedSize="200x200 px"
│   │   │   │    444 │               maxSizeMB={2}
│   │   │   │    445 │               defaultImage={formData.profileImage}
│   │   │   │    446 │             />
│   │   │   │    447 │ 
│   │   │   │    448 │             <ImageUpload
│   │   │   │    449 │               label="Last opp bakgrunnsbilde"
│   │   │   │    450 │               onUpload={(url) => setFormData({ ...formData, backgroundImage: url })}
│   │   │   │    451 │               recommendedSize="1200x400 px"
│   │   │   │    452 │               maxSizeMB={5}
│   │   │   │    453 │               defaultImage={formData.backgroundImage}
│   │   │   │    454 │             />
│   │   │   │    455 │           </div>
│   │   │   │    456 │ 
│   │   │   │    457 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │   │    458 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Bildegalleri</h2>
│   │   │   │    459 │ 
│   │   │   │    460 │             <ImageUpload
│   │   │   │    461 │               label="Last opp bilde til galleriet"
│   │   │   │    462 │               onUpload={handleGalleryUpload}
│   │   │   │    463 │               recommendedSize="800x600 px"
│   │   │   │    464 │               maxSizeMB={5}
│   │   │   │    465 │             />
│   │   │   │    466 │ 
│   │   │   │    467 │             {formData.galleryImages && formData.galleryImages.length > 0 && (
│   │   │   │    468 │               <div className="grid grid-cols-3 gap-4 mt-4">
│   │   │   │    469 │                 {formData.galleryImages.map((image: string, index: number) => (
│   │   │   │    470 │                   <div key={index} className="relative">
│   │   │   │    471 │                     <img src={image} alt={`Galleri bilde ${index + 1}`} className="w-full h-40 object-cover rounded" />
│   │   │   │    472 │                     <button
│   │   │   │    473 │                       type="button"
│   │   │   │    474 │                       onClick={() => handleDeleteGalleryImage(index)}
│   │   │   │    475 │                       className="absolute top-2 right-2 bg-red-600 text-white p-1 rounded-full hover:bg-red-700"
│   │   │   │    476 │                     >
│   │   │   │    477 │                       ✕
│   │   │   │    478 │                     </button>
│   │   │   │    479 │                   </div>
│   │   │   │    480 │                 ))}
│   │   │   │    481 │               </div>
│   │   │   │    482 │             )}
│   │   │   │    483 │           </div>
│   │   │   │    484 │ 
│   │   │   │    485 │           <button type="submit" className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700">
│   │   │   │    486 │             Lagre endringer
│   │   │   │    487 │           </button>
│   │   │   │    488 │         </form>
│   │   │   │    489 │       </div>
│   │   │   │    490 │     </div>
│   │   │   │    491 │   );
│   │   │   │    492 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📄 user.tsx
│   │   │   ├── FILINNHOLD (243 linjer):
│   │   │   │      1 │ // src/pages/edit-profile/user.tsx
│   │   │   │      2 │ import { useState, useEffect } from "react";
│   │   │   │      3 │ import { useRouter } from "next/router";
│   │   │   │      4 │ import { doc, getDoc, updateDoc } from "firebase/firestore";
│   │   │   │      5 │ import { updateEmail } from "firebase/auth";
│   │   │   │      6 │ import { db, auth } from "@/lib/firebase";
│   │   │   │      7 │ import { useAuth } from "@/context/AuthContext";
│   │   │   │      8 │ import ImageUpload from "@/components/ImageUpload";
│   │   │   │      9 │ import Link from "next/link";
│   │   │   │     10 │ 
│   │   │   │     11 │ export default function EditUserProfile() {
│   │   │   │     12 │   const { user, userData } = useAuth();
│   │   │   │     13 │   const router = useRouter();
│   │   │   │     14 │   const [formData, setFormData] = useState<any>(null);
│   │   │   │     15 │   const [error, setError] = useState<string | null>(null);
│   │   │   │     16 │   const [loading, setLoading] = useState(true);
│   │   │   │     17 │   const [emailError, setEmailError] = useState<string | null>(null);
│   │   │   │     18 │   const [phoneError, setPhoneError] = useState<string | null>(null);
│   │   │   │     19 │ 
│   │   │   │     20 │   useEffect(() => {
│   │   │   │     21 │     const fetchUser = async () => {
│   │   │   │     22 │       if (!user) return;
│   │   │   │     23 │ 
│   │   │   │     24 │       try {
│   │   │   │     25 │         const userDoc = await getDoc(doc(db, "users", user.uid));
│   │   │   │     26 │         if (userDoc.exists()) {
│   │   │   │     27 │           setFormData(userDoc.data());
│   │   │   │     28 │         } else {
│   │   │   │     29 │           setError("Brukeren ble ikke funnet.");
│   │   │   │     30 │         }
│   │   │   │     31 │       } catch (err: any) {
│   │   │   │     32 │         setError(err.message);
│   │   │   │     33 │       } finally {
│   │   │   │     34 │         setLoading(false);
│   │   │   │     35 │       }
│   │   │   │     36 │     };
│   │   │   │     37 │ 
│   │   │   │     38 │     fetchUser();
│   │   │   │     39 │   }, [user]);
│   │   │   │     40 │ 
│   │   │   │     41 │   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
│   │   │   │     42 │     const { name, value, type } = e.target;
│   │   │   │     43 │     if (type === "checkbox") {
│   │   │   │     44 │       setFormData({ ...formData, [name]: (e.target as HTMLInputElement).checked });
│   │   │   │     45 │     } else {
│   │   │   │     46 │       setFormData({ ...formData, [name]: value });
│   │   │   │     47 │     }
│   │   │   │     48 │ 
│   │   │   │     49 │     // Valider e-post og telefonnummer
│   │   │   │     50 │     if (name === "email") {
│   │   │   │     51 │       const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
│   │   │   │     52 │       setEmailError(emailRegex.test(value) ? null : "Ugyldig e-postadresse.");
│   │   │   │     53 │     }
│   │   │   │     54 │     if (name === "phone") {
│   │   │   │     55 │       const phoneRegex = /^\d{8}$/;
│   │   │   │     56 │       setPhoneError(value ? (phoneRegex.test(value) ? null : "Telefonnummeret må være 8 siffer.") : null);
│   │   │   │     57 │     }
│   │   │   │     58 │   };
│   │   │   │     59 │ 
│   │   │   │     60 │   const handleSubmit = async (e: React.FormEvent) => {
│   │   │   │     61 │     e.preventDefault();
│   │   │   │     62 │     setError(null);
│   │   │   │     63 │ 
│   │   │   │     64 │     // Sjekk for valideringsfeil
│   │   │   │     65 │     if (emailError || phoneError) {
│   │   │   │     66 │       setError("Vennligst fiks valideringsfeilene før du lagrer.");
│   │   │   │     67 │       return;
│   │   │   │     68 │     }
│   │   │   │     69 │ 
│   │   │   │     70 │     try {
│   │   │   │     71 │       // Oppdater e-post i Firebase Authentication hvis e-posten har endret seg
│   │   │   │     72 │       if (formData.email !== user?.email) {
│   │   │   │     73 │         await updateEmail(user!, formData.email);
│   │   │   │     74 │       }
│   │   │   │     75 │ 
│   │   │   │     76 │       // Oppdater brukerdata i Firestore
│   │   │   │     77 │       await updateDoc(doc(db, "users", user!.uid), {
│   │   │   │     78 │         ...formData,
│   │   │   │     79 │         updatedAt: new Date().toISOString(),
│   │   │   │     80 │       });
│   │   │   │     81 │ 
│   │   │   │     82 │       router.push(`/profile/user/${user!.uid}`);
│   │   │   │     83 │     } catch (err: any) {
│   │   │   │     84 │       setError(err.message);
│   │   │   │     85 │     }
│   │   │   │     86 │   };
│   │   │   │     87 │ 
│   │   │   │     88 │   if (loading) return <p>Laster...</p>;
│   │   │   │     89 │   if (error) return <p className="text-red-500">{error}</p>;
│   │   │   │     90 │   if (!formData) return <p>Ingen data tilgjengelig.</p>;
│   │   │   │     91 │ 
│   │   │   │     92 │   return (
│   │   │   │     93 │     <div className="bg-gray-50 min-h-screen">
│   │   │   │     94 │       <nav className="bg-blue-600 p-4 flex justify-between items-center">
│   │   │   │     95 │         <Link href="/" className="flex items-center text-white font-bold text-xl hover:text-blue-100">
│   │   │   │     96 │           <img src="/logo.svg" alt="B2B Logo" className="w-8 h-8 mr-2" />
│   │   │   │     97 │           B2B Social
│   │   │   │     98 │         </Link>
│   │   │   │     99 │       </nav>
│   │   │   │    100 │ 
│   │   │   │    101 │       <div className="max-w-xl mx-auto mt-10 bg-white rounded-lg shadow-md p-8">
│   │   │   │    102 │         <h1 className="text-2xl font-bold text-center mb-8 text-black">Rediger profil</h1>
│   │   │   │    103 │ 
│   │   │   │    104 │         {error && <p className="text-red-500 text-center mb-4">{error}</p>}
│   │   │   │    105 │ 
│   │   │   │    106 │         <form onSubmit={handleSubmit}>
│   │   │   │    107 │           <div className="flex gap-4 mb-4">
│   │   │   │    108 │             <div className="flex-1">
│   │   │   │    109 │               <label htmlFor="firstName" className="block text-sm font-medium text-black mb-2">
│   │   │   │    110 │                 Fornavn
│   │   │   │    111 │               </label>
│   │   │   │    112 │               <input
│   │   │   │    113 │                 type="text"
│   │   │   │    114 │                 id="firstName"
│   │   │   │    115 │                 name="firstName"
│   │   │   │    116 │                 value={formData.firstName}
│   │   │   │    117 │                 onChange={handleChange}
│   │   │   │    118 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    119 │                 required
│   │   │   │    120 │               />
│   │   │   │    121 │             </div>
│   │   │   │    122 │             <div className="flex-1">
│   │   │   │    123 │               <label htmlFor="lastName" className="block text-sm font-medium text-black mb-2">
│   │   │   │    124 │                 Etternavn
│   │   │   │    125 │               </label>
│   │   │   │    126 │               <input
│   │   │   │    127 │                 type="text"
│   │   │   │    128 │                 id="lastName"
│   │   │   │    129 │                 name="lastName"
│   │   │   │    130 │                 value={formData.lastName}
│   │   │   │    131 │                 onChange={handleChange}
│   │   │   │    132 │                 className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    133 │                 required
│   │   │   │    134 │               />
│   │   │   │    135 │             </div>
│   │   │   │    136 │           </div>
│   │   │   │    137 │ 
│   │   │   │    138 │           <div className="mb-4">
│   │   │   │    139 │             <label htmlFor="email" className="block text-sm font-medium text-black mb-2">
│   │   │   │    140 │               E-post
│   │   │   │    141 │             </label>
│   │   │   │    142 │             <input
│   │   │   │    143 │               type="email"
│   │   │   │    144 │               id="email"
│   │   │   │    145 │               name="email"
│   │   │   │    146 │               value={formData.email}
│   │   │   │    147 │               onChange={handleChange}
│   │   │   │    148 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    149 │               required
│   │   │   │    150 │             />
│   │   │   │    151 │             {emailError && <p className="text-red-500 text-sm mt-1">{emailError}</p>}
│   │   │   │    152 │           </div>
│   │   │   │    153 │ 
│   │   │   │    154 │           <div className="mb-4">
│   │   │   │    155 │             <label htmlFor="phone" className="block text-sm font-medium text-black mb-2">
│   │   │   │    156 │               Telefonnummer
│   │   │   │    157 │             </label>
│   │   │   │    158 │             <input
│   │   │   │    159 │               type="tel"
│   │   │   │    160 │               id="phone"
│   │   │   │    161 │               name="phone"
│   │   │   │    162 │               value={formData.phone}
│   │   │   │    163 │               onChange={handleChange}
│   │   │   │    164 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    165 │             />
│   │   │   │    166 │             {phoneError && <p className="text-red-500 text-sm mt-1">{phoneError}</p>}
│   │   │   │    167 │           </div>
│   │   │   │    168 │ 
│   │   │   │    169 │           <div className="mb-4">
│   │   │   │    170 │             <label htmlFor="profession" className="block text-sm font-medium text-black mb-2">
│   │   │   │    171 │               Yrke/Stilling
│   │   │   │    172 │             </label>
│   │   │   │    173 │             <input
│   │   │   │    174 │               type="text"
│   │   │   │    175 │               id="profession"
│   │   │   │    176 │               name="profession"
│   │   │   │    177 │               value={formData.profession}
│   │   │   │    178 │               onChange={handleChange}
│   │   │   │    179 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    180 │             />
│   │   │   │    181 │           </div>
│   │   │   │    182 │ 
│   │   │   │    183 │           <div className="mb-4">
│   │   │   │    184 │             <label htmlFor="industry" className="block text-sm font-medium text-black mb-2">
│   │   │   │    185 │               Bransje/Sektor
│   │   │   │    186 │             </label>
│   │   │   │    187 │             <select
│   │   │   │    188 │               id="industry"
│   │   │   │    189 │               name="industry"
│   │   │   │    190 │               value={formData.industry}
│   │   │   │    191 │               onChange={handleChange}
│   │   │   │    192 │               className="w-full px-4 py-2 border border-gray-300 rounded-md text-black"
│   │   │   │    193 │             >
│   │   │   │    194 │               <option value="">Velg bransje/sektor</option>
│   │   │   │    195 │               <option value="technology">Teknologi</option>
│   │   │   │    196 │               <option value="finance">Finans</option>
│   │   │   │    197 │               <option value="marketing">Markedsføring</option>
│   │   │   │    198 │               <option value="health">Helse</option>
│   │   │   │    199 │               <option value="other">Annet</option>
│   │   │   │    200 │             </select>
│   │   │   │    201 │           </div>
│   │   │   │    202 │ 
│   │   │   │    203 │           <div className="mb-8 border-b border-gray-200 pb-6">
│   │   │   │    204 │             <h2 className="text-lg font-semibold mb-4 text-blue-600">Profilbilde og bakgrunnsbilde</h2>
│   │   │   │    205 │ 
│   │   │   │    206 │             <ImageUpload
│   │   │   │    207 │               label="Last opp profilbilde"
│   │   │   │    208 │               onUpload={(url) => setFormData({ ...formData, profileImage: url })}
│   │   │   │    209 │               recommendedSize="200x200 px"
│   │   │   │    210 │               maxSizeMB={2}
│   │   │   │    211 │               defaultImage={formData.profileImage}
│   │   │   │    212 │             />
│   │   │   │    213 │ 
│   │   │   │    214 │             <ImageUpload
│   │   │   │    215 │               label="Last opp bakgrunnsbilde"
│   │   │   │    216 │               onUpload={(url) => setFormData({ ...formData, backgroundImage: url })}
│   │   │   │    217 │               recommendedSize="1200x400 px"
│   │   │   │    218 │               maxSizeMB={5}
│   │   │   │    219 │               defaultImage={formData.backgroundImage}
│   │   │   │    220 │             />
│   │   │   │    221 │           </div>
│   │   │   │    222 │ 
│   │   │   │    223 │           <div className="mb-6">
│   │   │   │    224 │             <label className="flex items-center">
│   │   │   │    225 │               <input
│   │   │   │    226 │                 type="checkbox"
│   │   │   │    227 │                 name="newsletter"
│   │   │   │    228 │                 checked={formData.newsletter}
│   │   │   │    229 │                 onChange={handleChange}
│   │   │   │    230 │                 className="mr-2"
│   │   │   │    231 │               />
│   │   │   │    232 │               <span className="text-black">Jeg ønsker å motta nyhetsbrev om tilbud og oppdateringer</span>
│   │   │   │    233 │             </label>
│   │   │   │    234 │           </div>
│   │   │   │    235 │ 
│   │   │   │    236 │           <button type="submit" className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700">
│   │   │   │    237 │             Lagre endringer
│   │   │   │    238 │           </button>
│   │   │   │    239 │         </form>
│   │   │   │    240 │       </div>
│   │   │   │    241 │     </div>
│   │   │   │    242 │   );
│   │   │   │    243 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   📁 profile/
│   │   │   📁 business/
│   │   │   │   📄 [orgNumber].tsx
│   │   │   │   ├── FILINNHOLD (42 linjer):
│   │   │   │   │      1 │ // src/pages/profile/business/[orgNumber].tsx
│   │   │   │   │      2 │ import { useRouter } from "next/router";
│   │   │   │   │      3 │ import { useEffect, useState } from "react";
│   │   │   │   │      4 │ import { doc, getDoc } from "firebase/firestore";
│   │   │   │   │      5 │ import { db } from "@/lib/firebase";
│   │   │   │   │      6 │ import { Business } from "@/lib/types";
│   │   │   │   │      7 │ import ProfileView from "@/components/ProfileView";
│   │   │   │   │      8 │ 
│   │   │   │   │      9 │ export default function BusinessProfile() {
│   │   │   │   │     10 │   const router = useRouter();
│   │   │   │   │     11 │   const { orgNumber } = router.query;
│   │   │   │   │     12 │   const [business, setBusiness] = useState<Business | null>(null);
│   │   │   │   │     13 │   const [loading, setLoading] = useState(true);
│   │   │   │   │     14 │   const [error, setError] = useState<string | null>(null);
│   │   │   │   │     15 │ 
│   │   │   │   │     16 │   useEffect(() => {
│   │   │   │   │     17 │     const fetchBusiness = async () => {
│   │   │   │   │     18 │       if (!orgNumber) return;
│   │   │   │   │     19 │ 
│   │   │   │   │     20 │       try {
│   │   │   │   │     21 │         const businessDoc = await getDoc(doc(db, "businesses", orgNumber as string));
│   │   │   │   │     22 │         if (businessDoc.exists()) {
│   │   │   │   │     23 │           setBusiness(businessDoc.data() as Business);
│   │   │   │   │     24 │         } else {
│   │   │   │   │     25 │           setError("Bedriften ble ikke funnet.");
│   │   │   │   │     26 │         }
│   │   │   │   │     27 │       } catch (err: any) {
│   │   │   │   │     28 │         setError(err.message);
│   │   │   │   │     29 │       } finally {
│   │   │   │   │     30 │         setLoading(false);
│   │   │   │   │     31 │       }
│   │   │   │   │     32 │     };
│   │   │   │   │     33 │ 
│   │   │   │   │     34 │     fetchBusiness();
│   │   │   │   │     35 │   }, [orgNumber]);
│   │   │   │   │     36 │ 
│   │   │   │   │     37 │   if (loading) return <p>Laster...</p>;
│   │   │   │   │     38 │   if (error) return <p className="text-red-500">{error}</p>;
│   │   │   │   │     39 │   if (!business) return <p>Ingen data tilgjengelig.</p>;
│   │   │   │   │     40 │ 
│   │   │   │   │     41 │   return <ProfileView profile={business} type="business" />;
│   │   │   │   │     42 │ }
│   │   │   │   └── SLUTT PÅ FIL

│   │   │   📁 user/
│   │   │   │   📄 [userId].tsx
│   │   │   │   ├── FILINNHOLD (42 linjer):
│   │   │   │   │      1 │ // src/pages/profile/user/[userId].tsx
│   │   │   │   │      2 │ import { useRouter } from "next/router";
│   │   │   │   │      3 │ import { useEffect, useState } from "react";
│   │   │   │   │      4 │ import { doc, getDoc } from "firebase/firestore";
│   │   │   │   │      5 │ import { db } from "@/lib/firebase";
│   │   │   │   │      6 │ import { User } from "@/lib/types";
│   │   │   │   │      7 │ import ProfileView from "@/components/ProfileView";
│   │   │   │   │      8 │ 
│   │   │   │   │      9 │ export default function UserProfile() {
│   │   │   │   │     10 │   const router = useRouter();
│   │   │   │   │     11 │   const { userId } = router.query;
│   │   │   │   │     12 │   const [user, setUser] = useState<User | null>(null);
│   │   │   │   │     13 │   const [loading, setLoading] = useState(true);
│   │   │   │   │     14 │   const [error, setError] = useState<string | null>(null);
│   │   │   │   │     15 │ 
│   │   │   │   │     16 │   useEffect(() => {
│   │   │   │   │     17 │     const fetchUser = async () => {
│   │   │   │   │     18 │       if (!userId) return;
│   │   │   │   │     19 │ 
│   │   │   │   │     20 │       try {
│   │   │   │   │     21 │         const userDoc = await getDoc(doc(db, "users", userId as string));
│   │   │   │   │     22 │         if (userDoc.exists()) {
│   │   │   │   │     23 │           setUser(userDoc.data() as User);
│   │   │   │   │     24 │         } else {
│   │   │   │   │     25 │           setError("Brukeren ble ikke funnet.");
│   │   │   │   │     26 │         }
│   │   │   │   │     27 │       } catch (err: any) {
│   │   │   │   │     28 │         setError(err.message);
│   │   │   │   │     29 │       } finally {
│   │   │   │   │     30 │         setLoading(false);
│   │   │   │   │     31 │       }
│   │   │   │   │     32 │     };
│   │   │   │   │     33 │ 
│   │   │   │   │     34 │     fetchUser();
│   │   │   │   │     35 │   }, [userId]);
│   │   │   │   │     36 │ 
│   │   │   │   │     37 │   if (loading) return <p>Laster...</p>;
│   │   │   │   │     38 │   if (error) return <p className="text-red-500">{error}</p>;
│   │   │   │   │     39 │   if (!user) return <p>Ingen data tilgjengelig.</p>;
│   │   │   │   │     40 │ 
│   │   │   │   │     41 │   return <ProfileView profile={user} type="user" />;
│   │   │   │   │     42 │ }
│   │   │   │   └── SLUTT PÅ FIL

│   📁 styles/
│   │   📄 globals.css
│   │   ├── FILINNHOLD (53 linjer):
│   │   │      1 │ @tailwind base;
│   │   │      2 │ 
│   │   │      3 │ @tailwind components;
│   │   │      4 │ 
│   │   │      5 │ @tailwind utilities;
│   │   │      6 │ 
│   │   │      7 │ /* Your custom styles below */
│   │   │      8 │ :root {
│   │   │      9 │   --background: #ffffff;
│   │   │     10 │   --foreground: #171717;
│   │   │     11 │ }
│   │   │     12 │ 
│   │   │     13 │ @media (prefers-color-scheme: dark) {
│   │   │     14 │   :root {
│   │   │     15 │     --background: #0a0a0a;
│   │   │     16 │     --foreground: #ededed;
│   │   │     17 │   }
│   │   │     18 │ }
│   │   │     19 │ 
│   │   │     20 │ body {
│   │   │     21 │   background: var(--background);
│   │   │     22 │   color: var(--foreground);
│   │   │     23 │   font-family: Arial, Helvetica, sans-serif;
│   │   │     24 │ }
│   │   │     25 │ .business-card {
│   │   │     26 │   transition: transform 0.3s ease, box-shadow 0.3s ease;
│   │   │     27 │ }
│   │   │     28 │ 
│   │   │     29 │ .business-card:hover {
│   │   │     30 │   transform: translateY(-5px);
│   │   │     31 │   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
│   │   │     32 │ }
│   │   │     33 │ 
│   │   │     34 │ .category-card {
│   │   │     35 │   transition: transform 0.3s ease, box-shadow 0.3s ease;
│   │   │     36 │ }
│   │   │     37 │ 
│   │   │     38 │ .category-card:hover {
│   │   │     39 │   transform: scale(1.05);
│   │   │     40 │   box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
│   │   │     41 │ }
│   │   │     42 │ 
│   │   │     43 │ h1, h2, h3 {
│   │   │     44 │   font-family: 'Inter', sans-serif; /* Moderne skrifttype */
│   │   │     45 │ }
│   │   │     46 │ 
│   │   │     47 │ button.bg-blue-600 {
│   │   │     48 │   background: linear-gradient(90deg, #2563eb, #3b82f6); /* Gradient for knapper */
│   │   │     49 │ }
│   │   │     50 │ 
│   │   │     51 │ button.bg-blue-600:hover {
│   │   │     52 │   background: linear-gradient(90deg, #1d4ed8, #2563eb);
│   │   │     53 │ }
│   │   └── SLUTT PÅ FIL


================================================================================

INDIVIDUELLE FILER:

ANALYSE AV: C:\bconnect\se\b2b-sosial\package.json
--------------------------------------------------------------------------------
📄 package.json
├── FILINNHOLD (30 linjer):
       1 │ {
       2 │   "name": "b2b-sosial",
       3 │   "version": "0.1.0",
       4 │   "private": true,
       5 │   "scripts": {
       6 │     "dev": "next dev",
       7 │     "build": "next build",
       8 │     "start": "next start",
       9 │     "lint": "next lint"
      10 │   },
      11 │   "dependencies": {
      12 │     "firebase": "^11.5.0",
      13 │     "framer-motion": "^12.5.0",
      14 │     "next": "15.2.3",
      15 │     "react": "^19.0.0",
      16 │     "react-dom": "^19.0.0"
      17 │   },
      18 │   "devDependencies": {
      19 │     "@eslint/eslintrc": "^3",
      20 │     "@types/node": "^20",
      21 │     "@types/react": "^19",
      22 │     "@types/react-dom": "^19",
      23 │     "autoprefixer": "^10.4.21",
      24 │     "eslint": "^9",
      25 │     "eslint-config-next": "15.2.3",
      26 │     "postcss": "^8.4.31",
      27 │     "tailwindcss": "^3.4.17",
      28 │     "typescript": "^5"
      29 │   }
      30 │ }
└── SLUTT PÅ FIL

ANALYSE AV: C:\bconnect\se\b2b-sosial\public\index.html
--------------------------------------------------------------------------------
📄 index.html
├── FILINNHOLD (89 linjer):
       1 │ <!DOCTYPE html>
       2 │ <html>
       3 │   <head>
       4 │     <meta charset="utf-8">
       5 │     <meta name="viewport" content="width=device-width, initial-scale=1">
       6 │     <title>Welcome to Firebase Hosting</title>
       7 │ 
       8 │     <!-- update the version number as needed -->
       9 │     <script defer src="/__/firebase/11.5.0/firebase-app-compat.js"></script>
      10 │     <!-- include only the Firebase features as you need -->
      11 │     <script defer src="/__/firebase/11.5.0/firebase-auth-compat.js"></script>
      12 │     <script defer src="/__/firebase/11.5.0/firebase-database-compat.js"></script>
      13 │     <script defer src="/__/firebase/11.5.0/firebase-firestore-compat.js"></script>
      14 │     <script defer src="/__/firebase/11.5.0/firebase-functions-compat.js"></script>
      15 │     <script defer src="/__/firebase/11.5.0/firebase-messaging-compat.js"></script>
      16 │     <script defer src="/__/firebase/11.5.0/firebase-storage-compat.js"></script>
      17 │     <script defer src="/__/firebase/11.5.0/firebase-analytics-compat.js"></script>
      18 │     <script defer src="/__/firebase/11.5.0/firebase-remote-config-compat.js"></script>
      19 │     <script defer src="/__/firebase/11.5.0/firebase-performance-compat.js"></script>
      20 │     <!-- 
      21 │       initialize the SDK after all desired features are loaded, set useEmulator to false
      22 │       to avoid connecting the SDK to running emulators.
      23 │     -->
      24 │     <script defer src="/__/firebase/init.js?useEmulator=true"></script>
      25 │ 
      26 │     <style media="screen">
      27 │       body { background: #ECEFF1; color: rgba(0,0,0,0.87); font-family: Roboto, Helvetica, Arial, sans-serif; margin: 0; padding: 0; }
      28 │       #message { background: white; max-width: 360px; margin: 100px auto 16px; padding: 32px 24px; border-radius: 3px; }
      29 │       #message h2 { color: #ffa100; font-weight: bold; font-size: 16px; margin: 0 0 8px; }
      30 │       #message h1 { font-size: 22px; font-weight: 300; color: rgba(0,0,0,0.6); margin: 0 0 16px;}
      31 │       #message p { line-height: 140%; margin: 16px 0 24px; font-size: 14px; }
      32 │       #message a { display: block; text-align: center; background: #039be5; text-transform: uppercase; text-decoration: none; color: white; padding: 16px; border-radius: 4px; }
      33 │       #message, #message a { box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); }
      34 │       #load { color: rgba(0,0,0,0.4); text-align: center; font-size: 13px; }
      35 │       @media (max-width: 600px) {
      36 │         body, #message { margin-top: 0; background: white; box-shadow: none; }
      37 │         body { border-top: 16px solid #ffa100; }
      38 │       }
      39 │     </style>
      40 │   </head>
      41 │   <body>
      42 │     <div id="message">
      43 │       <h2>Welcome</h2>
      44 │       <h1>Firebase Hosting Setup Complete</h1>
      45 │       <p>You're seeing this because you've successfully setup Firebase Hosting. Now it's time to go build something extraordinary!</p>
      46 │       <a target="_blank" href="https://firebase.google.com/docs/hosting/">Open Hosting Documentation</a>
      47 │     </div>
      48 │     <p id="load">Firebase SDK Loading&hellip;</p>
      49 │ 
      50 │     <script>
      51 │       document.addEventListener('DOMContentLoaded', function() {
      52 │         const loadEl = document.querySelector('#load');
      53 │         // // 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
      54 │         // // The Firebase SDK is initialized and available here!
      55 │         //
      56 │         // firebase.auth().onAuthStateChanged(user => { });
      57 │         // firebase.database().ref('/path/to/ref').on('value', snapshot => { });
      58 │         // firebase.firestore().doc('/foo/bar').get().then(() => { });
      59 │         // firebase.functions().httpsCallable('yourFunction')().then(() => { });
      60 │         // firebase.messaging().requestPermission().then(() => { });
      61 │         // firebase.storage().ref('/path/to/ref').getDownloadURL().then(() => { });
      62 │         // firebase.analytics(); // call to activate
      63 │         // firebase.analytics().logEvent('tutorial_completed');
      64 │         // firebase.performance(); // call to activate
      65 │         //
      66 │         // // 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
      67 │ 
      68 │         try {
      69 │           let app = firebase.app();
      70 │           let features = [
      71 │             'auth', 
      72 │             'database', 
      73 │             'firestore',
      74 │             'functions',
      75 │             'messaging', 
      76 │             'storage', 
      77 │             'analytics', 
      78 │             'remoteConfig',
      79 │             'performance',
      80 │           ].filter(feature => typeof app[feature] === 'function');
      81 │           loadEl.textContent = `Firebase SDK loaded with ${features.join(', ')}`;
      82 │         } catch (e) {
      83 │           console.error(e);
      84 │           loadEl.textContent = 'Error loading the Firebase SDK, check the console.';
      85 │         }
      86 │       });
      87 │     </script>
      88 │   </body>
      89 │ </html>
└── SLUTT PÅ FIL
