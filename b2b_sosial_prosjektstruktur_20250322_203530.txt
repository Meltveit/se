PROSJEKTSTRUKTUR OG KODEINNHOLD
Generert: 22.03.2025 kl. 20:35:30
================================================================================

MAPPESTRUKTUR OG KODEINNHOLD FOR: C:\bconnect\se\b2b-sosial\src
================================================================================

📁 src/
│   📁 app/
│   │   📄 layout.tsx
│   │   ├── FILINNHOLD (15 linjer):
│   │   │      1 │ import Header from "../components/Header";
│   │   │      2 │ import Footer from "../components/Footer";
│   │   │      3 │ import "./globals.css";
│   │   │      4 │ 
│   │   │      5 │ export default function RootLayout({ children }: { children: React.ReactNode }) {
│   │   │      6 │   return (
│   │   │      7 │     <html lang="en">
│   │   │      8 │       <body>
│   │   │      9 │         <Header />
│   │   │     10 │         {children}
│   │   │     11 │         <Footer />
│   │   │     12 │       </body>
│   │   │     13 │     </html>
│   │   │     14 │   );
│   │   │     15 │ }
│   │   └── SLUTT PÅ FIL

│   │   📄 page.tsx
│   │   ├── FILINNHOLD (5 linjer):
│   │   │      1 │ import { redirect } from "next/navigation";
│   │   │      2 │ 
│   │   │      3 │ export default function Home() {
│   │   │      4 │   redirect("/businesses");
│   │   │      5 │ }
│   │   └── SLUTT PÅ FIL

│   │   📁 businesses/
│   │   │   📄 page.tsx
│   │   │   ├── FILINNHOLD (17 linjer):
│   │   │   │      1 │ import { getBusinesses } from "../../lib/firestore";
│   │   │   │      2 │ import BusinessCard from "../../components/BusinessCard";
│   │   │   │      3 │ import FilterSidebar from "../../components/FilterSidebar";
│   │   │   │      4 │ 
│   │   │   │      5 │ export default async function BusinessesPage() {
│   │   │   │      6 │   const businesses = await getBusinesses();
│   │   │   │      7 │   return (
│   │   │   │      8 │     <div className="flex">
│   │   │   │      9 │       <FilterSidebar />
│   │   │   │     10 │       <div className="grid grid-cols-3 gap-4 p-4">
│   │   │   │     11 │         {businesses.map((business) => (
│   │   │   │     12 │           <BusinessCard key={business.id} business={business} />
│   │   │   │     13 │         ))}
│   │   │   │     14 │       </div>
│   │   │   │     15 │     </div>
│   │   │   │     16 │   );
│   │   │   │     17 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   │   📁 [id]/
│   │   │   │   📄 page.tsx
│   │   │   │   ├── FILINNHOLD (23 linjer):
│   │   │   │   │      1 │ import { getBusinessById } from "../../../lib/firestore";
│   │   │   │   │      2 │ import Link from "next/link";
│   │   │   │   │      3 │ 
│   │   │   │   │      4 │ export default async function BusinessProfilePage({ params }: { params: { id: string } }) {
│   │   │   │   │      5 │   const business = await getBusinessById(params.id);
│   │   │   │   │      6 │   if (!business) return <p>Business not found</p>;
│   │   │   │   │      7 │ 
│   │   │   │   │      8 │   return (
│   │   │   │   │      9 │     <div className="p-4">
│   │   │   │   │     10 │       <div className="bg-blue-600 h-40 rounded-t-lg"></div>
│   │   │   │   │     11 │       <div className="border rounded-b-lg p-4">
│   │   │   │   │     12 │         <h1>{business.name}</h1>
│   │   │   │   │     13 │         <p>Email: {business.email}</p>
│   │   │   │   │     14 │         <p>Phone: {business.phone}</p>
│   │   │   │   │     15 │         <p>Address: {business.address}</p>
│   │   │   │   │     16 │         <p>{business.description}</p>
│   │   │   │   │     17 │         <Link href={`/businesses/${params.id}/edit`}>
│   │   │   │   │     18 │           <button className="bg-blue-600 text-white px-4 py-2 rounded">Edit Profile</button>
│   │   │   │   │     19 │         </Link>
│   │   │   │   │     20 │       </div>
│   │   │   │   │     21 │     </div>
│   │   │   │   │     22 │   );
│   │   │   │   │     23 │ }
│   │   │   │   └── SLUTT PÅ FIL

│   │   │   │   📁 edit/
│   │   │   │   │   📄 page.tsx
│   │   │   │   │   ├── FILINNHOLD (38 linjer):
│   │   │   │   │   │      1 │ import { getBusinessById, updateBusiness } from "../../../../lib/firestore";
│   │   │   │   │   │      2 │ import { uploadImage } from "../../../../lib/storage";
│   │   │   │   │   │      3 │ 
│   │   │   │   │   │      4 │ export default async function EditProfilePage({ params }: { params: { id: string } }) {
│   │   │   │   │   │      5 │   const business = await getBusinessById(params.id);
│   │   │   │   │   │      6 │   if (!business) return <p>Business not found</p>;
│   │   │   │   │   │      7 │ 
│   │   │   │   │   │      8 │   const handleSubmit = async (formData: FormData) => {
│   │   │   │   │   │      9 │     "use server";
│   │   │   │   │   │     10 │     const updatedData: Partial<Business> = {
│   │   │   │   │   │     11 │       name: formData.get("name") as string,
│   │   │   │   │   │     12 │       email: formData.get("email") as string,
│   │   │   │   │   │     13 │       phone: formData.get("phone") as string,
│   │   │   │   │   │     14 │       address: formData.get("address") as string,
│   │   │   │   │   │     15 │       description: formData.get("description") as string,
│   │   │   │   │   │     16 │     };
│   │   │   │   │   │     17 │ 
│   │   │   │   │   │     18 │     const profileImage = formData.get("profileImage") as File;
│   │   │   │   │   │     19 │     if (profileImage) {
│   │   │   │   │   │     20 │       const url = await uploadImage(profileImage, `businesses/${params.id}/profile.jpg`);
│   │   │   │   │   │     21 │       updatedData.profileImage = url;
│   │   │   │   │   │     22 │     }
│   │   │   │   │   │     23 │ 
│   │   │   │   │   │     24 │     await updateBusiness(params.id, updatedData);
│   │   │   │   │   │     25 │   };
│   │   │   │   │   │     26 │ 
│   │   │   │   │   │     27 │   return (
│   │   │   │   │   │     28 │     <form action={handleSubmit} className="p-4">
│   │   │   │   │   │     29 │       <input name="name" defaultValue={business.name} className="border p-2 w-full mb-2" />
│   │   │   │   │   │     30 │       <input name="email" defaultValue={business.email} className="border p-2 w-full mb-2" />
│   │   │   │   │   │     31 │       <input name="phone" defaultValue={business.phone} className="border p-2 w-full mb-2" />
│   │   │   │   │   │     32 │       <input name="address" defaultValue={business.address} className="border p-2 w-full mb-2" />
│   │   │   │   │   │     33 │       <textarea name="description" defaultValue={business.description} className="border p-2 w-full mb-2" />
│   │   │   │   │   │     34 │       <input type="file" name="profileImage" className="mb-2" />
│   │   │   │   │   │     35 │       <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded">Save</button>
│   │   │   │   │   │     36 │     </form>
│   │   │   │   │   │     37 │   );
│   │   │   │   │   │     38 │ }
│   │   │   │   │   └── SLUTT PÅ FIL

│   │   📁 login/
│   │   │   📄 page.tsx
│   │   │   ├── FILINNHOLD (21 linjer):
│   │   │   │      1 │ import { loginBusiness } from "../../lib/auth";
│   │   │   │      2 │ import { redirect } from "next/navigation";
│   │   │   │      3 │ 
│   │   │   │      4 │ export default function LoginPage() {
│   │   │   │      5 │   const handleLogin = async (formData: FormData) => {
│   │   │   │      6 │     "use server";
│   │   │   │      7 │     const email = formData.get("email") as string;
│   │   │   │      8 │     const password = formData.get("password") as string;
│   │   │   │      9 │     await loginBusiness(email, password);
│   │   │   │     10 │     redirect("/businesses");
│   │   │   │     11 │   };
│   │   │   │     12 │ 
│   │   │   │     13 │   return (
│   │   │   │     14 │     <form action={handleLogin} className="p-4 max-w-md mx-auto">
│   │   │   │     15 │       <h2>Log In</h2>
│   │   │   │     16 │       <input name="email" placeholder="Email" className="border p-2 w-full mb-2" />
│   │   │   │     17 │       <input name="password" type="password" placeholder="Password" className="border p-2 w-full mb-2" />
│   │   │   │     18 │       <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded">Log In</button>
│   │   │   │     19 │     </form>
│   │   │   │     20 │   );
│   │   │   │     21 │ }
│   │   │   └── SLUTT PÅ FIL

│   │   📁 register/
│   │   │   📄 page.tsx
│   │   │   ├── FILINNHOLD (41 linjer):
│   │   │   │      1 │ import { registerBusiness } from "../../lib/auth";
│   │   │   │      2 │ import { addBusiness } from "../../lib/firestore";
│   │   │   │      3 │ import { redirect } from "next/navigation";
│   │   │   │      4 │ 
│   │   │   │      5 │ export default function RegisterPage() {
│   │   │   │      6 │   const handleRegister = async (formData: FormData) => {
│   │   │   │      7 │     "use server";
│   │   │   │      8 │     const email = formData.get("email") as string;
│   │   │   │      9 │     const password = formData.get("password") as string;
│   │   │   │     10 │     const userCredential = await registerBusiness(email, password);
│   │   │   │     11 │ 
│   │   │   │     12 │     const business = {
│   │   │   │     13 │       name: formData.get("name") as string,
│   │   │   │     14 │       email,
│   │   │   │     15 │       phone: formData.get("phone") as string,
│   │   │   │     16 │       address: formData.get("address") as string,
│   │   │   │     17 │       description: formData.get("description") as string,
│   │   │   │     18 │       categories: formData.getAll("categories") as string[],
│   │   │   │     19 │       contactPerson: formData.get("contactPerson") as string,
│   │   │   │     20 │       orgNumber: formData.get("orgNumber") as string,
│   │   │   │     21 │     };
│   │   │   │     22 │ 
│   │   │   │     23 │     await addBusiness(business);
│   │   │   │     24 │     redirect("/businesses");
│   │   │   │     25 │   };
│   │   │   │     26 │ 
│   │   │   │     27 │   return (
│   │   │   │     28 │     <form action={handleRegister} className="p-4 max-w-md mx-auto">
│   │   │   │     29 │       <h2>Register Your Business</h2>
│   │   │   │     30 │       <input name="name" placeholder="Business Name" className="border p-2 w-full mb-2" />
│   │   │   │     31 │       <input name="email" placeholder="Email" className="border p-2 w-full mb-2" />
│   │   │   │     32 │       <input name="password" type="password" placeholder="Password" className="border p-2 w-full mb-2" />
│   │   │   │     33 │       <input name="phone" placeholder="Phone" className="border p-2 w-full mb-2" />
│   │   │   │     34 │       <input name="address" placeholder="Address" className="border p-2 w-full mb-2" />
│   │   │   │     35 │       <textarea name="description" placeholder="Description" className="border p-2 w-full mb-2" />
│   │   │   │     36 │       <input name="contactPerson" placeholder="Contact Person" className="border p-2 w-full mb-2" />
│   │   │   │     37 │       <input name="orgNumber" placeholder="Org Number" className="border p-2 w-full mb-2" />
│   │   │   │     38 │       <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded">Register</button>
│   │   │   │     39 │     </form>
│   │   │   │     40 │   );
│   │   │   │     41 │ }
│   │   │   └── SLUTT PÅ FIL

│   📁 components/
│   │   📄 BusinessCard.tsx
│   │   ├── FILINNHOLD (14 linjer):
│   │   │      1 │ import Link from "next/link";
│   │   │      2 │ import { Business } from "../lib/types";
│   │   │      3 │ 
│   │   │      4 │ export default function BusinessCard({ business }: { business: Business }) {
│   │   │      5 │   return (
│   │   │      6 │     <div className="border rounded-lg p-4 shadow">
│   │   │      7 │       <h3>{business.name}</h3>
│   │   │      8 │       <p>{business.description}</p>
│   │   │      9 │       <Link href={`/businesses/${business.id}`}>
│   │   │     10 │         <button className="bg-blue-600 text-white px-4 py-2 rounded">View Profile</button>
│   │   │     11 │       </Link>
│   │   │     12 │     </div>
│   │   │     13 │   );
│   │   │     14 │ }
│   │   └── SLUTT PÅ FIL

│   │   📄 FilterSidebar.tsx
│   │   ├── FILINNHOLD (15 linjer):
│   │   │      1 │ export default function FilterSidebar() {
│   │   │      2 │     return (
│   │   │      3 │       <div className="border rounded-lg p-4">
│   │   │      4 │         <h3>Filter Businesses</h3>
│   │   │      5 │         <input type="text" placeholder="Search businesses..." className="border p-2 w-full mb-4" />
│   │   │      6 │         <div>
│   │   │      7 │           <h4>Categories</h4>
│   │   │      8 │           <label><input type="checkbox" /> Technology</label>
│   │   │      9 │           <label><input type="checkbox" /> Finance</label>
│   │   │     10 │           <label><input type="checkbox" /> Marketing</label>
│   │   │     11 │         </div>
│   │   │     12 │         <button className="bg-blue-600 text-white px-4 py-2 rounded mt-4">Apply Filters</button>
│   │   │     13 │       </div>
│   │   │     14 │     );
│   │   │     15 │   }
│   │   └── SLUTT PÅ FIL

│   │   📄 Footer.tsx
│   │   ├── FILINNHOLD (7 linjer):
│   │   │      1 │ export default function Footer() {
│   │   │      2 │     return (
│   │   │      3 │       <footer className="bg-gray-800 text-white p-4">
│   │   │      4 │         <p>B2B Social - Connect Businesses</p>
│   │   │      5 │       </footer>
│   │   │      6 │     );
│   │   │      7 │   }
│   │   └── SLUTT PÅ FIL

│   │   📄 Header.tsx
│   │   ├── FILINNHOLD (15 linjer):
│   │   │      1 │ import Link from "next/link";
│   │   │      2 │ 
│   │   │      3 │ export default function Header() {
│   │   │      4 │   return (
│   │   │      5 │     <header className="bg-blue-600 text-white p-4">
│   │   │      6 │       <nav className="flex justify-between">
│   │   │      7 │         <Link href="/">B2B Social</Link>
│   │   │      8 │         <div>
│   │   │      9 │           <Link href="/businesses" className="mx-2">Businesses</Link>
│   │   │     10 │           <Link href="/login" className="mx-2">Login</Link>
│   │   │     11 │         </div>
│   │   │     12 │       </nav>
│   │   │     13 │     </header>
│   │   │     14 │   );
│   │   │     15 │ }
│   │   └── SLUTT PÅ FIL

│   📁 lib/
│   │   📄 auth.ts
│   │   ├── FILINNHOLD (10 linjer):
│   │   │      1 │ import { auth } from "./firebase";
│   │   │      2 │ import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from "firebase/auth";
│   │   │      3 │ 
│   │   │      4 │ export const registerBusiness = async (email: string, password: string) => {
│   │   │      5 │   return createUserWithEmailAndPassword(auth, email, password);
│   │   │      6 │ };
│   │   │      7 │ 
│   │   │      8 │ export const loginBusiness = async (email: string, password: string) => {
│   │   │      9 │   return signInWithEmailAndPassword(auth, email, password);
│   │   │     10 │ };
│   │   └── SLUTT PÅ FIL

│   │   📄 firebase.ts
│   │   ├── FILINNHOLD (19 linjer):
│   │   │      1 │ import { initializeApp } from "firebase/app";
│   │   │      2 │ import { getAuth } from "firebase/auth";
│   │   │      3 │ import { getFirestore } from "firebase/firestore";
│   │   │      4 │ import { getStorage } from "firebase/storage";
│   │   │      5 │ 
│   │   │      6 │ const firebaseConfig = {
│   │   │      7 │     apiKey: "AIzaSyCyPn-Lhu7smXuYleDFBqwuiAH1r71Y4xs",
│   │   │      8 │     authDomain: "bsocial-5872f.firebaseapp.com",
│   │   │      9 │     projectId: "bsocial-5872f",
│   │   │     10 │     storageBucket: "bsocial-5872f.firebasestorage.app",
│   │   │     11 │     messagingSenderId: "680948415961",
│   │   │     12 │     appId: "1:680948415961:web:e3a115fd3e90bc080e6dc8",
│   │   │     13 │     measurementId: "G-P1R7R2T9VZ"
│   │   │     14 │ };
│   │   │     15 │ 
│   │   │     16 │ const app = initializeApp(firebaseConfig);
│   │   │     17 │ export const auth = getAuth(app);
│   │   │     18 │ export const db = getFirestore(app);
│   │   │     19 │ export const storage = getStorage(app);
│   │   └── SLUTT PÅ FIL

│   │   📄 firestore.ts
│   │   ├── FILINNHOLD (23 linjer):
│   │   │      1 │ import { db } from "./firebase";
│   │   │      2 │ import { collection, addDoc, getDocs, doc, updateDoc, getDoc } from "firebase/firestore";
│   │   │      3 │ import { Business } from "./types";
│   │   │      4 │ 
│   │   │      5 │ export const addBusiness = async (business: Omit<Business, "id">) => {
│   │   │      6 │   return addDoc(collection(db, "businesses"), business);
│   │   │      7 │ };
│   │   │      8 │ 
│   │   │      9 │ export const getBusinesses = async () => {
│   │   │     10 │   const snapshot = await getDocs(collection(db, "businesses"));
│   │   │     11 │   return snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() } as Business));
│   │   │     12 │ };
│   │   │     13 │ 
│   │   │     14 │ export const getBusinessById = async (id: string) => {
│   │   │     15 │   const docRef = doc(db, "businesses", id);
│   │   │     16 │   const docSnap = await getDoc(docRef);
│   │   │     17 │   return docSnap.exists() ? ({ id: docSnap.id, ...docSnap.data() } as Business) : null;
│   │   │     18 │ };
│   │   │     19 │ 
│   │   │     20 │ export const updateBusiness = async (id: string, data: Partial<Business>) => {
│   │   │     21 │   const docRef = doc(db, "businesses", id);
│   │   │     22 │   return updateDoc(docRef, data);
│   │   │     23 │ };
│   │   └── SLUTT PÅ FIL

│   │   📄 storage.ts
│   │   ├── FILINNHOLD (8 linjer):
│   │   │      1 │ import { storage } from "./firebase";
│   │   │      2 │ import { ref, uploadBytes, getDownloadURL } from "firebase/storage";
│   │   │      3 │ 
│   │   │      4 │ export const uploadImage = async (file: File, path: string) => {
│   │   │      5 │   const storageRef = ref(storage, path);
│   │   │      6 │   await uploadBytes(storageRef, file);
│   │   │      7 │   return getDownloadURL(storageRef);
│   │   │      8 │ };
│   │   └── SLUTT PÅ FIL

│   │   📄 types.ts
│   │   ├── FILINNHOLD (14 linjer):
│   │   │      1 │ export interface Business {
│   │   │      2 │     id: string;
│   │   │      3 │     name: string;
│   │   │      4 │     email: string;
│   │   │      5 │     phone: string;
│   │   │      6 │     address: string;
│   │   │      7 │     website: string;
│   │   │      8 │     description: string;
│   │   │      9 │     categories: string[];
│   │   │     10 │     profileImage?: string;
│   │   │     11 │     bannerImage?: string;
│   │   │     12 │     contactPerson: string;
│   │   │     13 │     orgNumber: string;
│   │   │     14 │   }
│   │   └── SLUTT PÅ FIL

│   📁 styles/

================================================================================

INDIVIDUELLE FILER:

ANALYSE AV: C:\bconnect\se\b2b-sosial\package.json
--------------------------------------------------------------------------------
📄 package.json
├── FILINNHOLD (30 linjer):
       1 │ {
       2 │   "name": "b2b-sosial",
       3 │   "version": "0.1.0",
       4 │   "private": true,
       5 │   "scripts": {
       6 │     "dev": "next dev",
       7 │     "build": "next build",
       8 │     "start": "next start",
       9 │     "lint": "next lint"
      10 │   },
      11 │   "dependencies": {
      12 │     "firebase": "^11.5.0",
      13 │     "framer-motion": "^12.5.0",
      14 │     "next": "^15.2.3",
      15 │     "react": "^19.0.0",
      16 │     "react-dom": "^19.0.0"
      17 │   },
      18 │   "devDependencies": {
      19 │     "@eslint/eslintrc": "^3",
      20 │     "@types/node": "^20.17.25",
      21 │     "@types/react": "^19.0.12",
      22 │     "@types/react-dom": "^19",
      23 │     "autoprefixer": "^10.4.21",
      24 │     "eslint": "^9",
      25 │     "eslint-config-next": "15.2.3",
      26 │     "postcss": "^8.4.31",
      27 │     "tailwindcss": "^3.4.17",
      28 │     "typescript": "^5.8.2"
      29 │   }
      30 │ }
└── SLUTT PÅ FIL

ANALYSE AV: C:\bconnect\se\b2b-sosial\public\index.html
--------------------------------------------------------------------------------
📄 index.html
├── FILINNHOLD (89 linjer):
       1 │ <!DOCTYPE html>
       2 │ <html>
       3 │   <head>
       4 │     <meta charset="utf-8">
       5 │     <meta name="viewport" content="width=device-width, initial-scale=1">
       6 │     <title>Welcome to Firebase Hosting</title>
       7 │ 
       8 │     <!-- update the version number as needed -->
       9 │     <script defer src="/__/firebase/11.5.0/firebase-app-compat.js"></script>
      10 │     <!-- include only the Firebase features as you need -->
      11 │     <script defer src="/__/firebase/11.5.0/firebase-auth-compat.js"></script>
      12 │     <script defer src="/__/firebase/11.5.0/firebase-database-compat.js"></script>
      13 │     <script defer src="/__/firebase/11.5.0/firebase-firestore-compat.js"></script>
      14 │     <script defer src="/__/firebase/11.5.0/firebase-functions-compat.js"></script>
      15 │     <script defer src="/__/firebase/11.5.0/firebase-messaging-compat.js"></script>
      16 │     <script defer src="/__/firebase/11.5.0/firebase-storage-compat.js"></script>
      17 │     <script defer src="/__/firebase/11.5.0/firebase-analytics-compat.js"></script>
      18 │     <script defer src="/__/firebase/11.5.0/firebase-remote-config-compat.js"></script>
      19 │     <script defer src="/__/firebase/11.5.0/firebase-performance-compat.js"></script>
      20 │     <!-- 
      21 │       initialize the SDK after all desired features are loaded, set useEmulator to false
      22 │       to avoid connecting the SDK to running emulators.
      23 │     -->
      24 │     <script defer src="/__/firebase/init.js?useEmulator=true"></script>
      25 │ 
      26 │     <style media="screen">
      27 │       body { background: #ECEFF1; color: rgba(0,0,0,0.87); font-family: Roboto, Helvetica, Arial, sans-serif; margin: 0; padding: 0; }
      28 │       #message { background: white; max-width: 360px; margin: 100px auto 16px; padding: 32px 24px; border-radius: 3px; }
      29 │       #message h2 { color: #ffa100; font-weight: bold; font-size: 16px; margin: 0 0 8px; }
      30 │       #message h1 { font-size: 22px; font-weight: 300; color: rgba(0,0,0,0.6); margin: 0 0 16px;}
      31 │       #message p { line-height: 140%; margin: 16px 0 24px; font-size: 14px; }
      32 │       #message a { display: block; text-align: center; background: #039be5; text-transform: uppercase; text-decoration: none; color: white; padding: 16px; border-radius: 4px; }
      33 │       #message, #message a { box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); }
      34 │       #load { color: rgba(0,0,0,0.4); text-align: center; font-size: 13px; }
      35 │       @media (max-width: 600px) {
      36 │         body, #message { margin-top: 0; background: white; box-shadow: none; }
      37 │         body { border-top: 16px solid #ffa100; }
      38 │       }
      39 │     </style>
      40 │   </head>
      41 │   <body>
      42 │     <div id="message">
      43 │       <h2>Welcome</h2>
      44 │       <h1>Firebase Hosting Setup Complete</h1>
      45 │       <p>You're seeing this because you've successfully setup Firebase Hosting. Now it's time to go build something extraordinary!</p>
      46 │       <a target="_blank" href="https://firebase.google.com/docs/hosting/">Open Hosting Documentation</a>
      47 │     </div>
      48 │     <p id="load">Firebase SDK Loading&hellip;</p>
      49 │ 
      50 │     <script>
      51 │       document.addEventListener('DOMContentLoaded', function() {
      52 │         const loadEl = document.querySelector('#load');
      53 │         // // 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
      54 │         // // The Firebase SDK is initialized and available here!
      55 │         //
      56 │         // firebase.auth().onAuthStateChanged(user => { });
      57 │         // firebase.database().ref('/path/to/ref').on('value', snapshot => { });
      58 │         // firebase.firestore().doc('/foo/bar').get().then(() => { });
      59 │         // firebase.functions().httpsCallable('yourFunction')().then(() => { });
      60 │         // firebase.messaging().requestPermission().then(() => { });
      61 │         // firebase.storage().ref('/path/to/ref').getDownloadURL().then(() => { });
      62 │         // firebase.analytics(); // call to activate
      63 │         // firebase.analytics().logEvent('tutorial_completed');
      64 │         // firebase.performance(); // call to activate
      65 │         //
      66 │         // // 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
      67 │ 
      68 │         try {
      69 │           let app = firebase.app();
      70 │           let features = [
      71 │             'auth', 
      72 │             'database', 
      73 │             'firestore',
      74 │             'functions',
      75 │             'messaging', 
      76 │             'storage', 
      77 │             'analytics', 
      78 │             'remoteConfig',
      79 │             'performance',
      80 │           ].filter(feature => typeof app[feature] === 'function');
      81 │           loadEl.textContent = `Firebase SDK loaded with ${features.join(', ')}`;
      82 │         } catch (e) {
      83 │           console.error(e);
      84 │           loadEl.textContent = 'Error loading the Firebase SDK, check the console.';
      85 │         }
      86 │       });
      87 │     </script>
      88 │   </body>
      89 │ </html>
└── SLUTT PÅ FIL
